"use strict";(self.webpackChunkwjftu_ds=self.webpackChunkwjftu_ds||[]).push([[8963],{8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>s});var r=n(6540);const i={},a=r.createContext(i);function o(e){const t=r.useContext(a);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),r.createElement(a.Provider,{value:t},e.children)}},8923:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"algorithmPractice/leetcode/74","title":"74 Search a 2D Matrix","description":"Leetcode","source":"@site/note/algorithmPractice/leetcode/74.md","sourceDirName":"algorithmPractice/leetcode","slug":"/algorithmPractice/leetcode/74","permalink":"/note/algorithmPractice/leetcode/74","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":74,"frontMatter":{"sidebar_position":74},"sidebar":"tutorialSidebar","previous":{"title":"72 Edit Distance","permalink":"/note/algorithmPractice/leetcode/72"},"next":{"title":"76 Minimum Window Substring","permalink":"/note/algorithmPractice/leetcode/76"}}');var i=n(4848),a=n(8453);const o={sidebar_position:74},s="74 Search a 2D Matrix",c={},l=[];function h(e){const t={a:"a",br:"br",code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"74-search-a-2d-matrix",children:"74 Search a 2D Matrix"})}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.a,{href:"https://leetcode.com/problems/search-a-2d-matrix/",children:"Leetcode"})}),"\n",(0,i.jsx)(t.p,{children:"Write an efficient algorithm that searches for a value target in an m x n integer matrix matrix. This matrix has the following properties:"}),"\n",(0,i.jsx)(t.p,{children:"Integers in each row are sorted from left to right.\nThe first integer of each row is greater than the last integer of the previous row."}),"\n",(0,i.jsx)(t.p,{children:"Example 1:"}),"\n",(0,i.jsxs)(t.p,{children:["Input: matrix = [[1,3,5,7],[10,11,16,20],[23,30,34,60]], target = 3",(0,i.jsx)(t.br,{}),"\n","Output: true"]}),"\n",(0,i.jsx)(t.p,{children:"Example 2:"}),"\n",(0,i.jsxs)(t.p,{children:["Input: matrix = [[1,3,5,7],[10,11,16,20],[23,30,34,60]], target = 13",(0,i.jsx)(t.br,{}),"\n","Output: false"]}),"\n",(0,i.jsx)(t.p,{children:"\u4e8c\u5206\u6cd5\u3002\u7b2c\u4e00\u6b21\u4e8c\u5206\u6cd5\uff0c\u524d\u5305\u540e\u4e0d\u5305\uff0c\u627e\u5230\u662f\u54ea\u4e00\u884c\u3002\u7b2c\u4e8c\u6b21\u7528\u666e\u901a\u7684\u4e8c\u5206\u6cd5\u627e\u5230\u662f\u54ea\u4e00\u5217\uff0c\u5982\u679c\u627e\u4e0d\u5230\u8fd4\u56de -1"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-java",children:" public boolean searchMatrix(int[][] matrix, int target) {\n    if(matrix==null || matrix.length==0) return false;\n    int low,high,mid,t;\n    low=0;\n    high=matrix.length;\n    while(low+1<high){\n        mid=(low+high)/2;\n        t=matrix[mid][0];\n        if(t==target){\n            return true;\n        } else if (t>target){\n            high=mid;\n        } else {\n            low=mid;\n        }\n    }\n    int row=low;\n    low=0;\n    high=matrix[0].length-1;\n    while(low<=high){\n        mid=(low+high)/2;\n        t=matrix[row][mid];\n        if(t==target){\n            return true;\n        } else if (t>target){\n            high=mid-1;\n        } else {\n            low=mid+1;\n        }\n    }\n    return false;\n}\n"})})]})}function d(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}}}]);