"use strict";(self.webpackChunkwjftu_ds=self.webpackChunkwjftu_ds||[]).push([[1821],{684:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>m,frontMatter:()=>s,metadata:()=>r,toc:()=>u});const r=JSON.parse('{"id":"algorithmPractice/leetcode/303","title":"303 Range Sum Query - Immutable","description":"Leetcode","source":"@site/note/algorithmPractice/leetcode/303.md","sourceDirName":"algorithmPractice/leetcode","slug":"/algorithmPractice/leetcode/303","permalink":"/note/algorithmPractice/leetcode/303","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":303,"frontMatter":{"sidebar_position":303},"sidebar":"tutorialSidebar","previous":{"title":"295 Find Median from Data Stream","permalink":"/note/algorithmPractice/leetcode/295"},"next":{"title":"322 Coin Change","permalink":"/note/algorithmPractice/leetcode/322"}}');var i=t(4848),a=t(8453);const s={sidebar_position:303},l="303 Range Sum Query - Immutable",o={},u=[];function c(e){const n={a:"a",br:"br",code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"303-range-sum-query---immutable",children:"303 Range Sum Query - Immutable"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://leetcode.com/problems/range-sum-query-immutable/description/",children:"Leetcode"})}),"\n",(0,i.jsx)(n.p,{children:"Given an integer array nums, handle multiple queries of the following type:"}),"\n",(0,i.jsxs)(n.p,{children:["Calculate the sum of the elements of nums between indices left and right inclusive where left ",(0,i.jsx)(n.code,{children:"<="})," right.\nImplement the NumArray class:"]}),"\n",(0,i.jsx)(n.p,{children:"NumArray(int[] nums) Initializes the object with the integer array nums.\nint sumRange(int left, int right) Returns the sum of the elements of nums between indices left and right inclusive (i.e. nums[left] + nums[left + 1] + ... + nums[right])."}),"\n",(0,i.jsx)(n.p,{children:"Example 1:"}),"\n",(0,i.jsxs)(n.p,{children:['Input\n["NumArray", "sumRange", "sumRange", "sumRange"]',(0,i.jsx)(n.br,{}),"\n","[[[-2, 0, 3, -5, 2, -1]], [0, 2], [2, 5], [0, 5]]",(0,i.jsx)(n.br,{}),"\n","Output",(0,i.jsx)(n.br,{}),"\n","[null, 1, -1, -3]"]}),"\n",(0,i.jsxs)(n.p,{children:["Explanation\nNumArray numArray = new NumArray([-2, 0, 3, -5, 2, -1]);",(0,i.jsx)(n.br,{}),"\n","numArray.sumRange(0, 2); // return (-2) + 0 + 3 = 1",(0,i.jsx)(n.br,{}),"\n","numArray.sumRange(2, 5); // return 3 + (-5) + 2 + (-1) = -1",(0,i.jsx)(n.br,{}),"\n","numArray.sumRange(0, 5); // return (-2) + 0 + 3 + (-5) + 2 + (-1) = -3"]}),"\n",(0,i.jsx)(n.p,{children:"\u5982\u679c\u76f4\u63a5\u8ba1\u7b97\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 o(right-left) \uff0c\u53ef\u4ee5\u5bf9\u6570\u7ec4\u8fdb\u884c\u9884\u5904\u7406\uff0c\u5b9e\u73b0 o(1)"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"class NumArray {\n    int[] total;\n\n    public NumArray(int[] nums) {\n        total=new int[nums.length+1];\n        for(int i=1;i<total.length;++i){\n            total[i]=total[i-1]+nums[i-1];\n        }\n    }\n    \n    public int sumRange(int left, int right) {\n        return total[right+1]-total[left];\n    }\n}\n"})})]})}function m(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>l});var r=t(6540);const i={},a=r.createContext(i);function s(e){const n=r.useContext(a);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);