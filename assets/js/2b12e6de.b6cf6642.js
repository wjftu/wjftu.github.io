"use strict";(self.webpackChunkwjftu_ds=self.webpackChunkwjftu_ds||[]).push([[2490],{6192:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"algorithmPractice/leetcode/25","title":"25 Reverse Nodes in k-Group","description":"LeetCode","source":"@site/note/algorithmPractice/leetcode/25.md","sourceDirName":"algorithmPractice/leetcode","slug":"/algorithmPractice/leetcode/25","permalink":"/note/algorithmPractice/leetcode/25","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":25,"frontMatter":{"sidebar_position":25},"sidebar":"tutorialSidebar","previous":{"title":"24 Swap Nodes in Pairs","permalink":"/note/algorithmPractice/leetcode/24"},"next":{"title":"32 Longest Valid Parentheses","permalink":"/note/algorithmPractice/leetcode/32"}}');var s=t(4848),o=t(8453);const r={sidebar_position:25},a="25 Reverse Nodes in k-Group",d={},l=[];function c(e){const n={a:"a",br:"br",code:"code",h1:"h1",header:"header",hr:"hr",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"25-reverse-nodes-in-k-group",children:"25 Reverse Nodes in k-Group"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://leetcode.com/problems/reverse-nodes-in-k-group/",children:"LeetCode"})}),"\n",(0,s.jsx)(n.p,{children:"Given the head of a linked list, reverse the nodes of the list k at a time, and return the modified list."}),"\n",(0,s.jsx)(n.p,{children:"k is a positive integer and is less than or equal to the length of the linked list. If the number of nodes is not a multiple of k then left-out nodes, in the end, should remain as it is."}),"\n",(0,s.jsx)(n.p,{children:"You may not alter the values in the list's nodes, only nodes themselves may be changed."}),"\n",(0,s.jsx)(n.p,{children:"Example 1:"}),"\n",(0,s.jsxs)(n.p,{children:["Input: head = [1,2,3,4,5], k = 2",(0,s.jsx)(n.br,{}),"\n","Output: [2,1,4,3,5]"]}),"\n",(0,s.jsx)(n.p,{children:"Example 2:"}),"\n",(0,s.jsxs)(n.p,{children:["Input: head = [1,2,3,4,5], k = 3",(0,s.jsx)(n.br,{}),"\n","Output: [3,2,1,4,5]"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.p,{children:"\u6bcf\u6b21\u5148\u8fdb\u884c\u5224\u65ad\uff0c\u5269\u4e0b\u7684\u5143\u7d20\u662f\u5426\u8db3\u591f\uff0c\u518d\u8f6c\u6362\u3002\u65f6\u95f4\u590d\u6742\u5ea6 o(n) \uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 o(k)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode reverseKGroup(ListNode head, int k) {\n        ListNode h = new ListNode(0,head);\n        ListNode t = h;\n        while(hasNext(t, k)){\n            t = modify(t, k);\n            for(int i=0;i<k;++i) t=t.next;\n        }\n        return h.next;\n    }\n    \n    private ListNode modify(ListNode head, int k){\n        Deque<ListNode> stack = new LinkedList<>();\n        ListNode t = head.next;\n        for(int i=0;i<k;++i){\n            stack.push(t);\n            t=t.next;\n        }\n        ListNode tail = t;\n        t = head;\n        while(!stack.isEmpty()){\n            t.next = stack.pop();\n            t=t.next;\n        }\n        t.next = tail;\n        return head;\n    }\n    \n    private boolean hasNext(ListNode head, int k){\n        for(int i=0;i<k;++i){\n            head=head.next;\n            if(head==null) return false;\n        }\n        return true;\n    }\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:"\u7a7a\u95f4\u590d\u6742\u5ea6 o(1) \u7684\u89e3\u6cd5"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"public ListNode reverseKGroup(ListNode head, int k) {\n    if(k<=1) return head;\n    ListNode dummy=new ListNode();\n    dummy.next=head;\n    ListNode t=dummy,temp,a,b,c=null;\n    while(true){\n        temp=t;\n        for(int i=0;i<k;++i){\n            temp=temp.next;\n            if(temp==null) return dummy.next;\n        }\n        a=temp.next;\n        b=t.next;\n        c=b;\n        for(int i=0;i<k;++i){ \n            c=c.next;\n            b.next=a;\n            a=b;\n            b=c;\n            \n        }\n        temp=t.next;\n        t.next=a;\n        t=temp;\n    }\n}\n"})})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>a});var i=t(6540);const s={},o=i.createContext(s);function r(e){const n=i.useContext(o);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);