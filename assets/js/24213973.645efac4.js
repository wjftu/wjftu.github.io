"use strict";(self.webpackChunkwjftu_ds=self.webpackChunkwjftu_ds||[]).push([[5308],{1690:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>d,default:()=>u,frontMatter:()=>s,metadata:()=>r,toc:()=>a});const r=JSON.parse('{"id":"algorithmPractice/codingInterviews/32","title":"32 \u4ece\u4e0a\u5f80\u4e0b\u6253\u5370\u4e8c\u53c9\u6811","description":"\u9898\u76ee\u4e00\uff1a\u4ece\u4e0a\u5f80\u4e0b\u6253\u5370\u4e8c\u53c9\u6811","source":"@site/note/algorithmPractice/codingInterviews/32.md","sourceDirName":"algorithmPractice/codingInterviews","slug":"/algorithmPractice/codingInterviews/32","permalink":"/note/algorithmPractice/codingInterviews/32","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":32,"frontMatter":{"sidebar_position":32},"sidebar":"tutorialSidebar","previous":{"title":"31 \u6808\u7684\u538b\u5165\u3001\u5f39\u51fa\u5e8f\u5217","permalink":"/note/algorithmPractice/codingInterviews/31"},"next":{"title":"33 \u4e8c\u53c9\u641c\u7d22\u6811\u7684\u540e\u5e8f\u904d\u5386\u5e8f\u5217","permalink":"/note/algorithmPractice/codingInterviews/33"}}');var i=t(4848),l=t(8453);const s={sidebar_position:32},d="32 \u4ece\u4e0a\u5f80\u4e0b\u6253\u5370\u4e8c\u53c9\u6811",o={},a=[{value:"\u9898\u76ee\u4e00\uff1a\u4ece\u4e0a\u5f80\u4e0b\u6253\u5370\u4e8c\u53c9\u6811",id:"\u9898\u76ee\u4e00\u4ece\u4e0a\u5f80\u4e0b\u6253\u5370\u4e8c\u53c9\u6811",level:3},{value:"\u9898\u76ee\u4e8c\uff1a\u628a\u4e8c\u53c9\u6811\u6253\u5370\u6210\u591a\u884c",id:"\u9898\u76ee\u4e8c\u628a\u4e8c\u53c9\u6811\u6253\u5370\u6210\u591a\u884c",level:3},{value:"\u9898\u76ee\u4e8c\uff1a\u6309\u4e4b\u5b57\u5f62\u987a\u5e8f\u6253\u5370\u4e8c\u53c9\u6811",id:"\u9898\u76ee\u4e8c\u6309\u4e4b\u5b57\u5f62\u987a\u5e8f\u6253\u5370\u4e8c\u53c9\u6811",level:3}];function c(e){const n={a:"a",code:"code",h1:"h1",h3:"h3",header:"header",p:"p",pre:"pre",...(0,l.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"32-\u4ece\u4e0a\u5f80\u4e0b\u6253\u5370\u4e8c\u53c9\u6811",children:"32 \u4ece\u4e0a\u5f80\u4e0b\u6253\u5370\u4e8c\u53c9\u6811"})}),"\n",(0,i.jsx)(n.h3,{id:"\u9898\u76ee\u4e00\u4ece\u4e0a\u5f80\u4e0b\u6253\u5370\u4e8c\u53c9\u6811",children:"\u9898\u76ee\u4e00\uff1a\u4ece\u4e0a\u5f80\u4e0b\u6253\u5370\u4e8c\u53c9\u6811"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://www.nowcoder.com/practice/7fe2212963db4790b57431d9ed259701",children:"\u725b\u5ba2"})}),"\n",(0,i.jsx)(n.p,{children:"\u4f7f\u7528\u4e00\u4e2a\u961f\u5217\u6765\u4fdd\u8bc1\u6bcf\u4e00\u5c42\u7684\u8282\u70b9\u6309\u987a\u5e8f\u52a0\u5165\u5e76\u5f39\u51fa\u961f\u5217"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"public ArrayList<Integer> PrintFromTopToBottom(TreeNode root) {\n    ArrayList<Integer> list = new ArrayList<>();\n    Queue<TreeNode> queue = new LinkedList<>();\n    if(root!=null) queue.add(root);\n    while(!queue.isEmpty()){\n        TreeNode t = queue.poll();\n        if(t.left!=null) queue.add(t.left);\n        if(t.right!=null) queue.add(t.right);\n        list.add(t.val);\n    }\n    return list;\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"\u9898\u76ee\u4e8c\u628a\u4e8c\u53c9\u6811\u6253\u5370\u6210\u591a\u884c",children:"\u9898\u76ee\u4e8c\uff1a\u628a\u4e8c\u53c9\u6811\u6253\u5370\u6210\u591a\u884c"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://www.nowcoder.com/practice/445c44d982d04483b04a54f298796288",children:"\u725b\u5ba2"})}),"\n",(0,i.jsx)(n.p,{children:"\u63cf\u8ff0"}),"\n",(0,i.jsx)(n.p,{children:"\u7ed9\u5b9a\u4e00\u4e2a\u8282\u70b9\u6570\u4e3a n \u4e8c\u53c9\u6811\uff0c\u8981\u6c42\u4ece\u4e0a\u5230\u4e0b\u6309\u5c42\u6253\u5370\u4e8c\u53c9\u6811\u7684 val \u503c\uff0c\u540c\u4e00\u5c42\u7ed3\u70b9\u4ece\u5de6\u81f3\u53f3\u8f93\u51fa\uff0c\u6bcf\u4e00\u5c42\u8f93\u51fa\u4e00\u884c\uff0c\u5c06\u8f93\u51fa\u7684\u7ed3\u679c\u5b58\u653e\u5230\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4\u4e2d\u8fd4\u56de\u3002"}),"\n",(0,i.jsx)(n.p,{children:"nextLevel \u8bb0\u5f55\u4e0b\u4e00\u5c42\u7684\u5143\u7d20\u4e2a\u6570\uff0ctoBePrinted \u5269\u4f59\u7684\u5143\u7d20\u4e2a\u6570\uff0c\u6bcf\u6b21\u4ece\u961f\u5217\u5f39\u51fa\u4e00\u4e2a\u5143\u7d20 toBePrinted \u51cf 1 \uff0ctoBePrinted \u4e3a 0 \u65f6\u5f00\u542f\u65b0\u7684\u4e00\u884c\u3002"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"ArrayList<ArrayList<Integer> > Print(TreeNode pRoot) {\n    ArrayList<ArrayList<Integer>> ret = new ArrayList<>();\n    if(pRoot==null) return ret;\n    Queue<TreeNode> queue = new LinkedList<>();\n    queue.add(pRoot);\n    int nextLevel=0;\n    int toBePrinted=1;\n    ArrayList<Integer> list=new ArrayList<>();\n    ret.add(list);\n    while(!queue.isEmpty()){\n        TreeNode t=queue.poll();\n        --toBePrinted; \n        if(t.left!=null){\n            queue.add(t.left);\n            ++nextLevel;\n        } \n        if(t.right!=null){\n            queue.add(t.right);\n            ++nextLevel;\n        } \n        list.add(t.val);         \n        if(toBePrinted==0 && nextLevel>0){\n            list=new ArrayList<>();\n            ret.add(list);\n            toBePrinted=nextLevel;\n            nextLevel=0;\n        }\n\n    }\n    return ret;\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"\u9898\u76ee\u4e8c\u6309\u4e4b\u5b57\u5f62\u987a\u5e8f\u6253\u5370\u4e8c\u53c9\u6811",children:"\u9898\u76ee\u4e8c\uff1a\u6309\u4e4b\u5b57\u5f62\u987a\u5e8f\u6253\u5370\u4e8c\u53c9\u6811"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://www.nowcoder.com/practice/91b69814117f4e8097390d107d2efbe0",children:"\u725b\u5ba2"})}),"\n",(0,i.jsx)(n.p,{children:"\u63cf\u8ff0"}),"\n",(0,i.jsx)(n.p,{children:"\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u53c9\u6811\uff0c\u8fd4\u56de\u8be5\u4e8c\u53c9\u6811\u7684\u4e4b\u5b57\u5f62\u5c42\u5e8f\u904d\u5386\uff0c\uff08\u7b2c\u4e00\u5c42\u4ece\u5de6\u5411\u53f3\uff0c\u4e0b\u4e00\u5c42\u4ece\u53f3\u5411\u5de6\uff0c\u4e00\u76f4\u8fd9\u6837\u4ea4\u66ff\uff09"}),"\n",(0,i.jsx)(n.p,{children:"\u7528\u4e24\u4e2a\u6808\u4ea4\u66ff"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"public ArrayList<ArrayList<Integer> > Print(TreeNode pRoot) {\n    ArrayList<ArrayList<Integer>> ret = new ArrayList<>();\n    if(pRoot==null) return ret;\n    Deque<TreeNode>[] levels=new Deque[2];\n    levels[0]=new LinkedList<>();\n    levels[1]=new LinkedList<>();\n\n    levels[0].push(pRoot);\n    int current=0;\n    int next=1;\n    ArrayList<Integer> list = new ArrayList<>();\n    ret.add(list);\n    while(!levels[0].isEmpty() || !levels[1].isEmpty()){\n        TreeNode t = levels[current].pop();\n        list.add(t.val);\n        if(current==0){\n            if(t.left!=null){\n                levels[next].push(t.left);\n\n            }\n            if(t.right!=null){\n                levels[next].push(t.right);\n            }\n        } else {\n            if(t.right!=null){\n                levels[next].push(t.right);\n\n            }\n            if(t.left!=null){\n                levels[next].push(t.left);\n            }\n        }\n\n        if(levels[current].isEmpty()){\n            current = 1 - current;\n            next = 1 - next;\n            if(!levels[0].isEmpty() || !levels[1].isEmpty()) {\n                list = new ArrayList<>();\n                ret.add(list);\n            }\n        }\n    }\n\n    return ret;\n}\n"})})]})}function u(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>d});var r=t(6540);const i={},l=r.createContext(i);function s(e){const n=r.useContext(l);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),r.createElement(l.Provider,{value:n},e.children)}}}]);