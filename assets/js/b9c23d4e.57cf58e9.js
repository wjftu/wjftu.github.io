"use strict";(self.webpackChunkwjftu_ds=self.webpackChunkwjftu_ds||[]).push([[4671],{3650:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"springboot/spring-integration","title":"Spring Integration","description":"\u6982\u5ff5","source":"@site/note/springboot/spring-integration.md","sourceDirName":"springboot","slug":"/springboot/spring-integration","permalink":"/note/springboot/spring-integration","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":12,"frontMatter":{"title":"Spring Integration","sidebar_position":12},"sidebar":"tutorialSidebar","previous":{"title":"Spring Reactor","permalink":"/note/springboot/reactor"},"next":{"title":"\u4f7f\u7528\u6570\u636e","permalink":"/note/springboot/data/"}}');var i=r(4848),s=r(8453);const a={title:"Spring Integration",sidebar_position:12},o="Spring Integration",l={},c=[{value:"\u6982\u5ff5",id:"\u6982\u5ff5",level:3},{value:"file",id:"file",level:3},{value:"sftp",id:"sftp",level:3}];function d(e){const n={code:"code",h1:"h1",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"spring-integration",children:"Spring Integration"})}),"\n",(0,i.jsx)(n.h3,{id:"\u6982\u5ff5",children:"\u6982\u5ff5"}),"\n",(0,i.jsx)(n.p,{children:"\u6d88\u606f\u901a\u9053 (Message Channel)"}),"\n",(0,i.jsx)(n.p,{children:"\u6d88\u606f\u4f20\u9012\u7684\u7ba1\u9053\uff0c\u8fde\u63a5\u5404\u4e2a\u7ec4\u4ef6\uff1a"}),"\n",(0,i.jsx)(n.p,{children:"\u4f8b\u5982\uff1a"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"\u76f4\u63a5\u901a\u9053 (DirectChannel)\uff1a\u540c\u6b65\uff0c\u540c\u4e00\u7ebf\u7a0b\u6267\u884c\uff0c\u53d1\u9001\u8005\u4f1a\u963b\u585e\u76f4\u5230\u6d88\u606f\u88ab\u63a5\u6536"}),"\n",(0,i.jsx)(n.li,{children:"\u961f\u5217\u901a\u9053 (QueueChannel)\uff1a\u5f02\u6b65\uff0c\u57fa\u4e8e\u961f\u5217\u5b9e\u73b0"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"\u96c6\u6210\u6d41 (Integration Flow)"}),"\n",(0,i.jsx)(n.p,{children:"\u5b9a\u4e49\u6d88\u606f\u4ece\u8f93\u5165\u5230\u8f93\u51fa\u7684\u5b8c\u6574\u5904\u7406\u8def\u5f84"}),"\n",(0,i.jsx)(n.p,{children:"\u7f51\u5173 (Gateway)"}),"\n",(0,i.jsx)(n.p,{children:"\u96c6\u6210\u6d41\u7684\u5165\u53e3\uff0c\u5c06\u6570\u636e\u4f20\u9012\u7ed9\u96c6\u6210\u6d41\u3002\u4e1a\u52a1\u4ee3\u7801\u53ef\u4ee5\u901a\u8fc7 Gateway \u8c03\u7528\u96c6\u6210\u6d41"}),"\n",(0,i.jsx)(n.p,{children:"Transformer"}),"\n",(0,i.jsx)(n.p,{children:"\u5c06\u6d88\u606f\u8f6c\u4e3a\u5176\u4ed6\u683c\u5f0f"}),"\n",(0,i.jsx)(n.h3,{id:"file",children:"file"}),"\n",(0,i.jsx)(n.p,{children:"\u5c06\u5b57\u7b26\u4e32\u8f6c\u4e3a\u5927\u5199\u5199\u5165\u6587\u4ef6"}),"\n",(0,i.jsx)(n.p,{children:"\u6d41\u7a0b\uff1a"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Gateway -> textInChannel -> upper case transformer -> fileWriteChannel -> file write handler\n"})}),"\n",(0,i.jsx)(n.p,{children:"\u4f9d\u8d56"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"plugins {\n    id 'java'\n    id 'org.springframework.boot' version '3.3.10'\n    id 'io.spring.dependency-management' version '1.1.7'\n}\n\ndependencies {\n    implementation 'org.springframework.boot:spring-boot-starter-integration'\n    implementation 'org.springframework.integration:spring-integration-file'\n}\n"})}),"\n",(0,i.jsx)(n.p,{children:"\u5b9a\u4e49 Flow"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'@Configuration\npublic class FileWriterIntegrationConfig {\n\n    @Value("${file.path}")\n    private String filePath;\n\n    public FileWritingMessageHandler fileWriter() {\n        FileWritingMessageHandler handler =\n                new FileWritingMessageHandler(new File(dirPath));\n        handler.setExpectReply(false);\n        handler.setFileExistsMode(FileExistsMode.APPEND);\n        handler.setAppendNewLine(true);\n        handler.setExpectReply(false);\n        handler.setFileExistsMode(FileExistsMode.APPEND);\n        handler.setAppendNewLine(true);\n        handler.setFileNameGenerator(message -> "output.txt");\n        handler.setAutoCreateDirectory(true);\n        handler.setCharset("UTF-8");\n        return handler;\n    }\n\n    @Bean\n    public IntegrationFlow fileWriterFlow() {\n        return IntegrationFlow\n                .from(MessageChannels.direct("textInChannel"))\n                .<String, String>transform(t -> t.toUpperCase())\n                .channel(MessageChannels.direct("fileWriterChannel"))\n                .handle(fileWriter())\n                .get();\n    }\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"\u5b9a\u4e49 Gateway"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'@MessagingGateway\npublic interface MyStringGateway {\n    @Gateway(requestChannel = "textInChannel")\n    void send(String message);\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"\u4f20\u5165\u5b57\u7b26\u4e32\u5230 Gateway"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'@SpringBootTest\nclass TestFile {\n\n    @Autowired\n    MyStringGateway myStringGateway;\n\n    @Test\n    void test() {\n        myStringGateway.send("hello");\n        myStringGateway.send("integration");\n        myStringGateway.send("hello world");\n    }\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"\u8f93\u51fa\u5230 output.txt \u6587\u4ef6"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"HELLO\nINTEGRATION\nHELLO WORLD\n"})}),"\n",(0,i.jsx)(n.h3,{id:"sftp",children:"sftp"}),"\n",(0,i.jsx)(n.p,{children:"\u4e00\u4e2a\u81ea\u52a8\u4ece\u8fdc\u7a0b sftp \u62c9\u53d6\u6587\u4ef6\u7684\u793a\u4f8b"}),"\n",(0,i.jsx)(n.p,{children:"\u4f9d\u8d56"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"dependencies {\n    implementation 'org.springframework.boot:spring-boot-starter-integration'\n    implementation 'org.springframework.integration:spring-integration-sftp'\n}\n"})}),"\n",(0,i.jsx)(n.p,{children:"\u5b9a\u4e49 session factory \u3002"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"@Bean\npublic SessionFactory<SftpClient.DirEntry> sftpSessionFactory() {\n    DefaultSftpSessionFactory factory = new DefaultSftpSessionFactory();\n    factory.setHost(host);\n    factory.setPort(port);\n    factory.setUser(user);\n    factory.setPassword(password);\n    factory.setAllowUnknownKeys(true);\n    return factory;\n}\n"})}),"\n",(0,i.jsx)(n.p,{children:"\u751f\u5b58\u73af\u5883\u5efa\u8bae\u7528\u5bc6\u94a5\uff0c\u800c\u4e0d\u662f\u5bc6\u7801\uff0c\u4e14\u5173\u95ed allow unknown keys"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"DefaultSftpSessionFactory factory = new DefaultSftpSessionFactory();\nfactory.setHost(host);\nfactory.setPort(port);\nfactory.setUser(user);\nfactory.setPrivateKey(new ByteArrayResource(privateKey.getBytes()));\nfactory.setPrivateKeyPassphrase(passPhrase);\nfactory.setAllowUnknownKeys(false);\n"})}),"\n",(0,i.jsx)(n.p,{children:"Spring Boot 3.3 \u5bf9\u5e94\u7684 Apache MINA SSHD \u652f\u6301 RSA ECDSA \uff0c\u4f46\u9700\u8981\u5f15\u5165 Bouncy Castle \u624d\u80fd\u652f\u6301 ED25519"}),"\n",(0,i.jsx)(n.p,{children:"FileWritingMessageHandler \u8d1f\u8d23\u5199\u6587\u4ef6\uff0c\u5373\u4f7f\u6ca1\u6709\u624b\u52a8\u521b\u5efa\uff0c\u4e5f\u6709\u81ea\u52a8\u914d\u7f6e\u7684"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'@Bean\npublic SftpInboundFileSynchronizer sftpInboundFileSynchronizer() {\n    SftpInboundFileSynchronizer synchronizer = new SftpInboundFileSynchronizer(sftpSessionFactory());\n    synchronizer.setDeleteRemoteFiles(false);\n    synchronizer.setRemoteDirectory(sftpRemoteDirectory);\n    synchronizer.setFilter(new SftpSimplePatternFileListFilter("*.txt"));\n    synchronizer.setDeleteRemoteFiles(true);\n    return synchronizer;\n\n}\n\n@Bean\npublic SftpInboundFileSynchronizingMessageSource sftpMessageSource() {\n    SftpInboundFileSynchronizingMessageSource source = new SftpInboundFileSynchronizingMessageSource(sftpInboundFileSynchronizer());\n    source.setLocalDirectory(new File(sftpLocalDirectory));\n    source.setAutoCreateLocalDirectory(true);\n    source.setMaxFetchSize(10); \n\n    return source;\n}\n\n@Bean\npublic MessageHandler fileWritingMessageHandler() {\n    FileWritingMessageHandler handler = new FileWritingMessageHandler(new File(sftpLocalDirectory));\n    handler.setAutoCreateDirectory(true);\n    handler.setExpectReply(false);\n    return handler;\n}\n\n@Bean\npublic IntegrationFlow sftpInboundFlow() {\n\n    return IntegrationFlow\n            .from(sftpMessageSource(), e -> e.poller(Pollers.fixedDelay(Duration.ofSeconds(7)).maxMessagesPerPoll(2)))\n            .handle(message -> {\n                System.out.println("Fetched file: " + message.getPayload());\n            })\n            .get();\n}\n'})})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>o});var t=r(6540);const i={},s=t.createContext(i);function a(e){const n=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);