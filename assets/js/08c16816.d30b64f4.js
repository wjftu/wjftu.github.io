"use strict";(self.webpackChunkwjftu_ds=self.webpackChunkwjftu_ds||[]).push([[5132],{1545:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"algorithmPractice/leetcode/64","title":"64 Minimum Path Sum","description":"Leetcode","source":"@site/note/algorithmPractice/leetcode/64.md","sourceDirName":"algorithmPractice/leetcode","slug":"/algorithmPractice/leetcode/64","permalink":"/note/algorithmPractice/leetcode/64","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":64,"frontMatter":{"sidebar_position":64},"sidebar":"tutorialSidebar","previous":{"title":"61 Rotate List","permalink":"/note/algorithmPractice/leetcode/61"},"next":{"title":"69 Sqrt(x)","permalink":"/note/algorithmPractice/leetcode/69"}}');var r=n(4848),o=n(8453);const a={sidebar_position:64},s="64 Minimum Path Sum",c={},d=[];function l(e){const t={a:"a",br:"br",code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"64-minimum-path-sum",children:"64 Minimum Path Sum"})}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.a,{href:"https://leetcode.com/problems/minimum-path-sum/",children:"Leetcode"})}),"\n",(0,r.jsx)(t.p,{children:"Given a m x n grid filled with non-negative numbers, find a path from top left to bottom right, which minimizes the sum of all numbers along its path."}),"\n",(0,r.jsx)(t.p,{children:"Note: You can only move either down or right at any point in time."}),"\n",(0,r.jsx)(t.p,{children:"Example 1:"}),"\n",(0,r.jsxs)(t.p,{children:["Input: grid = [[1,3,1],[1,5,1],[4,2,1]]",(0,r.jsx)(t.br,{}),"\n","Output: 7",(0,r.jsx)(t.br,{}),"\n","Explanation: Because the path 1 \u2192 3 \u2192 1 \u2192 1 \u2192 1 minimizes the sum."]}),"\n",(0,r.jsx)(t.p,{children:"Example 2:"}),"\n",(0,r.jsxs)(t.p,{children:["Input: grid = [[1,2,3],[4,5,6]]",(0,r.jsx)(t.br,{}),"\n","Output: 12"]}),"\n",(0,r.jsx)(t.p,{children:"\u8d70\u5230\u6bcf\u4e2a\u70b9\u70b9\u6700\u5c0f\u503c\u4e3a\u5b83\u7684\u503c\u52a0\u4e0a\u4e0a\u65b9\u548c\u5de6\u65b9\u7684\u6700\u5c0f\u503c\uff0c\u65e0\u9700\u5173\u5fc3\u5b83\u5177\u4f53\u8d70\u90a3\u6761\u8def\u3002"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-java",children:"public int minPathSum(int[][] grid) {\n    if(grid==null || grid.length==0 || grid[0].length==0) return 0;\n    for(int i=1;i<grid[0].length;++i){\n        grid[0][i]+=grid[0][i-1];\n    }\n    for(int i=1;i<grid.length;++i){\n        grid[i][0]+=grid[i-1][0];\n    }\n    for(int i=1;i<grid.length;++i){\n        for(int j=1;j<grid[i].length;++j){\n            grid[i][j]+=Math.min(grid[i-1][j],grid[i][j-1]);\n        }\n    }\n    return grid[grid.length-1][grid[0].length-1];\n}\n"})})]})}function h(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>s});var i=n(6540);const r={},o=i.createContext(r);function a(e){const t=i.useContext(o);return i.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(o.Provider,{value:t},e.children)}}}]);