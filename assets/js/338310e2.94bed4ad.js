"use strict";(self.webpackChunkwjftu_ds=self.webpackChunkwjftu_ds||[]).push([[2268],{353:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>h,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>r,toc:()=>s});const r=JSON.parse('{"id":"algorithmPractice/leetcode/110","title":"110 Balanced Binary Tree","description":"LeetCode","source":"@site/note/algorithmPractice/leetcode/110.md","sourceDirName":"algorithmPractice/leetcode","slug":"/algorithmPractice/leetcode/110","permalink":"/note/algorithmPractice/leetcode/110","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":110,"frontMatter":{"sidebar_position":110},"sidebar":"tutorialSidebar","previous":{"title":"104 Maximum Depth of Binary Tree","permalink":"/note/algorithmPractice/leetcode/104"},"next":{"title":"121 Best Time to Buy and Sell Stock","permalink":"/note/algorithmPractice/leetcode/121"}}');var i=t(4848),a=t(8453);const o={sidebar_position:110},l="110 Balanced Binary Tree",h={},s=[];function c(e){const n={a:"a",code:"code",h1:"h1",header:"header",hr:"hr",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"110-balanced-binary-tree",children:"110 Balanced Binary Tree"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://leetcode.com/problems/balanced-binary-tree/",children:"LeetCode"})}),"\n",(0,i.jsx)(n.p,{children:"Given a binary tree, determine if it is height-balanced."}),"\n",(0,i.jsx)(n.p,{children:"For this problem, a height-balanced binary tree is defined as:"}),"\n",(0,i.jsx)(n.p,{children:"a binary tree in which the left and right subtrees of every node differ in height by no more than 1."}),"\n",(0,i.jsx)(n.p,{children:"Example 1:"}),"\n",(0,i.jsx)(n.p,{children:"Input: root = [3,9,20,null,null,15,7]\r\nOutput: true"}),"\n",(0,i.jsx)(n.p,{children:"Example 2:"}),"\n",(0,i.jsx)(n.p,{children:"Input: root = [1,2,2,3,3,null,null,4,4]\r\nOutput: false"}),"\n",(0,i.jsx)(n.p,{children:"Example 3:"}),"\n",(0,i.jsx)(n.p,{children:"Input: root = []\r\nOutput: true"}),"\n",(0,i.jsx)(n.p,{children:"Constraints:"}),"\n",(0,i.jsxs)(n.p,{children:["The number of nodes in the tree is in the range [0, 5000].\r\n",(0,i.jsx)(n.code,{children:"-104 <= Node.val <= 104"})]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.p,{children:"\u9012\u5f52\uff0c\u8ba1\u7b97\u6bcf\u4e2a\u8282\u70b9\u4e24\u5b50\u6811\u7684\u9ad8\u5ea6\uff0c\u5982\u679c\u76f8\u5dee\u8d85\u8fc71\uff0c\u5219\u4e0d\u662f\u5e73\u8861\u6811"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"class Solution {\r\n    boolean isBal=true;\r\n    public boolean isBalanced(TreeNode root) {\r\n        height(root);\r\n        return isBal;\r\n    }\r\n    \r\n    private int height(TreeNode t){\r\n        if(t==null) return 0;\r\n        int height1=height(t.left);\r\n        int height2=height(t.right);\r\n        if(Math.abs(height1-height2)>1) isBal=false;\r\n        return Math.max(height1,height2)+1;\r\n    }\r\n}\n"})}),"\n",(0,i.jsx)(n.p,{children:"\u5982\u679c\u5de6\u5b50\u6811\u9012\u5f52\u5b8c\u5df2\u7ecf\u53d1\u73b0\u4e0d\u662f\u5e73\u8861\u6811\u4e86\uff0c\u90a3\u4e48\u4e0d\u5fc5\u8003\u8651\u53f3\u5b50\u6811\uff0c\u4e0d\u5fc5\u771f\u7684\u8ba1\u7b97\u9ad8\u5ea6\uff08\u8fd9\u6837\u5176\u5b9e\u6548\u7387\u5dee\u4e0d\u591a\uff09"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"class Solution {\r\n    boolean isBal=true;\r\n    public boolean isBalanced(TreeNode root) {\r\n        height(root);\r\n        return isBal;\r\n    }\r\n    \r\n    private int height(TreeNode t){\r\n        if(t==null) return 0;\r\n        int height1=height(t.left);\r\n        if(!isBal) return 0;\r\n        int height2=height(t.right);\r\n        if(Math.abs(height1-height2)>1) isBal=false;\r\n        return Math.max(height1,height2)+1;\r\n    }\r\n}\n"})})]})}function d(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>l});var r=t(6540);const i={},a=r.createContext(i);function o(e){const n=r.useContext(a);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);