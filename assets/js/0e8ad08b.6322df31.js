"use strict";(self.webpackChunkwjftu_ds=self.webpackChunkwjftu_ds||[]).push([[5901],{6684:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>s,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"algorithmPractice/leetcode/hashtable","title":"Hash Table","description":"1 Two Sum","source":"@site/note/algorithmPractice/leetcode/hashtable.md","sourceDirName":"algorithmPractice/leetcode","slug":"/algorithmPractice/leetcode/hashtable","permalink":"/note/algorithmPractice/leetcode/hashtable","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":-1,"frontMatter":{"sidebar_position":-1},"sidebar":"tutorialSidebar","previous":{"title":"Graph","permalink":"/note/algorithmPractice/leetcode/graph"},"next":{"title":"Linked List","permalink":"/note/algorithmPractice/leetcode/linkedlist"}}');var a=t(4848),i=t(8453);const s={sidebar_position:-1},o="Hash Table",l={},c=[{value:"1 Two Sum",id:"1-two-sum",level:3},{value:"217 Contains Duplicate",id:"217-contains-duplicate",level:3},{value:"594 Longest Harmonious Subsequence",id:"594-longest-harmonious-subsequence",level:3}];function u(e){const n={a:"a",code:"code",h1:"h1",h3:"h3",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"hash-table",children:"Hash Table"})}),"\n",(0,a.jsx)(n.h3,{id:"1-two-sum",children:(0,a.jsx)(n.a,{href:"1",children:"1 Two Sum"})}),"\n",(0,a.jsx)(n.p,{children:"Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target."}),"\n",(0,a.jsx)(n.p,{children:"You may assume that each input would have exactly one solution, and you may not use the same element twice."}),"\n",(0,a.jsx)(n.p,{children:"You can return the answer in any order."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:"class Solution {\r\n    public int[] twoSum(int[] nums, int target) {\r\n        HashMap<Integer,Integer> map=new HashMap<>();\r\n        int[] ret=new int[2];\r\n        for(int i=0;i<nums.length;++i){\r\n            if(map.containsKey(nums[i])){\r\n                ret[0]=i;\r\n                ret[1]=map.get(nums[i]);\r\n                break;\r\n            }\r\n            map.put(target-nums[i],i);\r\n        }\r\n        return ret;\r\n    }\r\n}\n"})}),"\n",(0,a.jsx)(n.h3,{id:"217-contains-duplicate",children:(0,a.jsx)(n.a,{href:"217",children:"217 Contains Duplicate"})}),"\n",(0,a.jsx)(n.p,{children:"Given an integer array nums, return true if any value appears at least twice in the array, and return false if every element is distinct."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:"class Solution {\r\n    public boolean containsDuplicate(int[] nums) {\r\n        HashSet<Integer> set=new HashSet<>();\r\n        for(int i=0;i<nums.length;++i){\r\n            if(set.contains(nums[i]))\r\n                return true;\r\n            set.add(nums[i]);\r\n        }\r\n        return false;\r\n    }\r\n}\n"})}),"\n",(0,a.jsx)(n.h3,{id:"594-longest-harmonious-subsequence",children:(0,a.jsx)(n.a,{href:"594",children:"594 Longest Harmonious Subsequence"})}),"\n",(0,a.jsx)(n.p,{children:"We define a harmonious array as an array where the difference between its maximum value and its minimum value is exactly 1."}),"\n",(0,a.jsx)(n.p,{children:"Given an integer array nums, return the length of its longest harmonious subsequence among all its possible subsequences."}),"\n",(0,a.jsx)(n.p,{children:"A subsequence of array is a sequence that can be derived from the array by deleting some or no elements without changing the order of the remaining elements."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:"public int findLHS(int[] nums) {\r\n    HashMap<Integer,Integer> map=new HashMap<>();\r\n    for(int i:nums){\r\n        map.put(i,map.getOrDefault(i,0)+1);\r\n    }\r\n    int max=0;\r\n    for(int i:map.keySet()){\r\n        if(map.containsKey(i+1)){\r\n            max=Math.max(max,map.get(i)+map.get(i+1));\r\n        }\r\n    }\r\n    return max;\r\n}\n"})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(u,{...e})}):u(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>o});var r=t(6540);const a={},i=r.createContext(a);function s(e){const n=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);