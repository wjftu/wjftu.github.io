"use strict";(self.webpackChunkwjftu_ds=self.webpackChunkwjftu_ds||[]).push([[4475],{259:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>s,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"algorithmPractice/leetcode/763","title":"763 Partition Labels","description":"Leetcode","source":"@site/note/algorithmPractice/leetcode/763.md","sourceDirName":"algorithmPractice/leetcode","slug":"/algorithmPractice/leetcode/763","permalink":"/note/algorithmPractice/leetcode/763","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":763,"frontMatter":{"sidebar_position":763},"sidebar":"tutorialSidebar","previous":{"title":"744 Find Smallest Letter Greater Than Target","permalink":"/note/algorithmPractice/leetcode/744"},"next":{"title":"799 Champagne Tower","permalink":"/note/algorithmPractice/leetcode/799"}}');var i=n(4848),a=n(8453);const s={sidebar_position:763},o="763 Partition Labels",c={},l=[];function h(e){const t={a:"a",br:"br",code:"code",h1:"h1",header:"header",hr:"hr",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"763-partition-labels",children:"763 Partition Labels"})}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.a,{href:"https://leetcode.com/problems/partition-labels/",children:"Leetcode"})}),"\n",(0,i.jsx)(t.p,{children:"You are given a string s. We want to partition the string into as many parts as possible so that each letter appears in at most one part."}),"\n",(0,i.jsx)(t.p,{children:"Note that the partition is done so that after concatenating all the parts in order, the resultant string should be s."}),"\n",(0,i.jsx)(t.p,{children:"Return a list of integers representing the size of these parts."}),"\n",(0,i.jsx)(t.p,{children:"Example 1:"}),"\n",(0,i.jsxs)(t.p,{children:['Input: s = "ababcbacadefegdehijhklij"',(0,i.jsx)(t.br,{}),"\n","Output: [9,7,8]",(0,i.jsx)(t.br,{}),"\n","Explanation:",(0,i.jsx)(t.br,{}),"\n",'The partition is "ababcbaca", "defegde", "hijhklij".',(0,i.jsx)(t.br,{}),"\n","This is a partition so that each letter appears in at most one part.",(0,i.jsx)(t.br,{}),"\n",'A partition like "ababcbacadefegde", "hijhklij" is incorrect, because it splits s into less parts.']}),"\n",(0,i.jsx)(t.p,{children:"Example 2:"}),"\n",(0,i.jsxs)(t.p,{children:['Input: s = "eccbbbbdec"',(0,i.jsx)(t.br,{}),"\n","Output: [10]"]}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsx)(t.p,{children:"\u4f7f\u7528\u4e00\u4e2a\u8f85\u52a9\u6570\u7ec4\u8bb0\u5f55\u6bcf\u4e2a\u5b57\u7b26\u6700\u540e\u51fa\u73b0\u7684\u4f4d\u7f6e\uff0c\u7531\u4e8e\u5206\u5272\u7684\u65f6\u5019\u9700\u8981\u628a\u6240\u6709\u76f8\u540c\u5b57\u6bcd\u5206\u5272\u5728\u4e00\u8d77\uff0c\u904d\u5386\u7684\u65f6\u5019\u4e0d\u65ad\u5224\u65ad\u5f53\u524d\u5b57\u6bcd\u6700\u53f3\u4f4d\u7f6e\uff0c\u77e5\u9053\u5f53\u524d\u904d\u5386\u7684\u5b57\u6bcd\u548c\u6700\u53f3\u4f4d\u7f6e\u91cd\u5408\u3002"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-java",children:"public List<Integer> partitionLabels(String s) {\n    int[] lastIndex=new int[128];\n    List<Integer> ret=new ArrayList<>();\n    for(int i=0;i<s.length();++i){\n        lastIndex[s.charAt(i)]=i;\n    }\n    int left=0, right=0;\n    for(int i=0;i<s.length();++i){\n        int last=lastIndex[s.charAt(i)];\n        if(last>right) right=last;\n        if(i==right){\n            ret.add(i-left+1);\n            left=i+1;\n        }\n    }\n    return ret;\n}\n"})})]})}function d(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>o});var r=n(6540);const i={},a=r.createContext(i);function s(e){const t=r.useContext(a);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),r.createElement(a.Provider,{value:t},e.children)}}}]);