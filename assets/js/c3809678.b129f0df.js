"use strict";(self.webpackChunkwjftu_ds=self.webpackChunkwjftu_ds||[]).push([[9661],{6156:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>l,contentTitle:()=>c,default:()=>u,frontMatter:()=>s,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"algorithmPractice/codingInterviews/13","title":"13 \u673a\u5668\u4eba\u7684\u8fd0\u52a8\u8303\u56f4","description":"leetcode-cn","source":"@site/note/algorithmPractice/codingInterviews/13.md","sourceDirName":"algorithmPractice/codingInterviews","slug":"/algorithmPractice/codingInterviews/13","permalink":"/note/algorithmPractice/codingInterviews/13","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":13,"frontMatter":{"sidebar_position":13},"sidebar":"tutorialSidebar","previous":{"title":"12 \u77e9\u9635\u4e2d\u7684\u8def\u5f84","permalink":"/note/algorithmPractice/codingInterviews/12"},"next":{"title":"14 \u526a\u7ef3\u5b50","permalink":"/note/algorithmPractice/codingInterviews/14"}}');var o=i(4848),r=i(8453);const s={sidebar_position:13},c="13 \u673a\u5668\u4eba\u7684\u8fd0\u52a8\u8303\u56f4",l={},d=[];function a(n){const e={a:"a",br:"br",code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,r.R)(),...n.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.header,{children:(0,o.jsx)(e.h1,{id:"13-\u673a\u5668\u4eba\u7684\u8fd0\u52a8\u8303\u56f4",children:"13 \u673a\u5668\u4eba\u7684\u8fd0\u52a8\u8303\u56f4"})}),"\n",(0,o.jsx)(e.p,{children:(0,o.jsx)(e.a,{href:"https://leetcode-cn.com/problems/ji-qi-ren-de-yun-dong-fan-wei-lcof",children:"leetcode-cn"})}),"\n",(0,o.jsx)(e.p,{children:"\u5730\u4e0a\u6709\u4e00\u4e2am\u884cn\u5217\u7684\u65b9\u683c\uff0c\u4ece\u5750\u6807 [0,0] \u5230\u5750\u6807 [m-1,n-1] \u3002\u4e00\u4e2a\u673a\u5668\u4eba\u4ece\u5750\u6807 [0, 0] \u7684\u683c\u5b50\u5f00\u59cb\u79fb\u52a8\uff0c\u5b83\u6bcf\u6b21\u53ef\u4ee5\u5411\u5de6\u3001\u53f3\u3001\u4e0a\u3001\u4e0b\u79fb\u52a8\u4e00\u683c\uff08\u4e0d\u80fd\u79fb\u52a8\u5230\u65b9\u683c\u5916\uff09\uff0c\u4e5f\u4e0d\u80fd\u8fdb\u5165\u884c\u5750\u6807\u548c\u5217\u5750\u6807\u7684\u6570\u4f4d\u4e4b\u548c\u5927\u4e8ek\u7684\u683c\u5b50\u3002\u4f8b\u5982\uff0c\u5f53k\u4e3a18\u65f6\uff0c\u673a\u5668\u4eba\u80fd\u591f\u8fdb\u5165\u65b9\u683c [35, 37] \uff0c\u56e0\u4e3a3+5+3+7=18\u3002\u4f46\u5b83\u4e0d\u80fd\u8fdb\u5165\u65b9\u683c [35, 38]\uff0c\u56e0\u4e3a3+5+3+8=19\u3002\u8bf7\u95ee\u8be5\u673a\u5668\u4eba\u80fd\u591f\u5230\u8fbe\u591a\u5c11\u4e2a\u683c\u5b50\uff1f"}),"\n",(0,o.jsx)(e.p,{children:"\u793a\u4f8b 1\uff1a"}),"\n",(0,o.jsxs)(e.p,{children:["\u8f93\u5165\uff1am = 2, n = 3, k = 1",(0,o.jsx)(e.br,{}),"\n","\u8f93\u51fa\uff1a3"]}),"\n",(0,o.jsx)(e.p,{children:"\u793a\u4f8b 2\uff1a"}),"\n",(0,o.jsxs)(e.p,{children:["\u8f93\u5165\uff1am = 3, n = 1, k = 0",(0,o.jsx)(e.br,{}),"\n","\u8f93\u51fa\uff1a1"]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-java",children:"class Solution {\n    int count;\n    public int movingCount(int m, int n, int k) {\n        boolean[][] visited = new boolean[m][n];\n        count=0;\n        dfs(0,0,visited,k,m,n);\n        return count;\n    }\n\n    private void dfs(int i, int j, boolean[][] visited, int k, int m, int n){\n        count++;\n        visited[i][j]=true;\n        if(i-1>=0 && !visited[i-1][j] && access(i-1,j,k)) dfs(i-1, j, visited, k, m, n);\n        if(i+1<m && !visited[i+1][j] && access(i+1,j,k)) dfs(i+1, j, visited, k, m, n);\n        if(j-1>=0 && !visited[i][j-1] && access(i,j-1,k)) dfs(i, j-1, visited, k, m, n);\n        if(j+1<n && !visited[i][j+1] && access(i,j+1,k)) dfs(i, j+1, visited, k, m, n);\n    }\n\n    private boolean access(int i, int j, int k){\n        int sum=0;\n        while(i>0){\n            sum+=i%10;\n            i/=10;\n        }\n        while(j>0){\n            sum+=j%10;\n            j/=10;\n        }\n        return sum<=k;\n    }\n}\n"})}),"\n",(0,o.jsx)(e.p,{children:(0,o.jsx)(e.a,{href:"https://www.nowcoder.com/practice/6e5207314b5241fb83f2329e89fdecc8",children:"\u725b\u5ba2"})}),"\n",(0,o.jsxs)(e.p,{children:["\u63cf\u8ff0\uff1a",(0,o.jsx)(e.br,{}),"\n","\u5730\u4e0a\u6709\u4e00\u4e2a rows \u884c\u548c cols \u5217\u7684\u65b9\u683c\u3002\u5750\u6807\u4ece [0,0] \u5230 [rows-1,cols-1] \u3002\u4e00\u4e2a\u673a\u5668\u4eba\u4ece\u5750\u6807 [0,0] \u7684\u683c\u5b50\u5f00\u59cb\u79fb\u52a8\uff0c\u6bcf\u4e00\u6b21\u53ea\u80fd\u5411\u5de6\uff0c\u53f3\uff0c\u4e0a\uff0c\u4e0b\u56db\u4e2a\u65b9\u5411\u79fb\u52a8\u4e00\u683c\uff0c\u4f46\u662f\u4e0d\u80fd\u8fdb\u5165\u884c\u5750\u6807\u548c\u5217\u5750\u6807\u7684\u6570\u4f4d\u4e4b\u548c\u5927\u4e8e threshold \u7684\u683c\u5b50\u3002 \u4f8b\u5982\uff0c\u5f53 threshold \u4e3a 18 \u65f6\uff0c\u673a\u5668\u4eba\u80fd\u591f\u8fdb\u5165\u65b9\u683c   [35,37] \uff0c\u56e0\u4e3a 3+5+3+7 = 18\u3002\u4f46\u662f\uff0c\u5b83\u4e0d\u80fd\u8fdb\u5165\u65b9\u683c [35,38] \uff0c\u56e0\u4e3a 3+5+3+8 = 19 \u3002\u8bf7\u95ee\u8be5\u673a\u5668\u4eba\u80fd\u591f\u8fbe\u5230\u591a\u5c11\u4e2a\u683c\u5b50\uff1f"]}),"\n",(0,o.jsx)(e.p,{children:"\u6df1\u5ea6\u4f18\u5148\u641c\u7d22"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-java",children:"public class Solution {\n    public int movingCount(int threshold, int rows, int cols) {\n        boolean[][] visited = new boolean[rows][cols];\n        if(threshold<0 || rows<=0 || cols <=0) return 0;\n        return movingCountCore(threshold, rows, cols, 0, 0, visited);\n        \n    }\n    \n    private int movingCountCore(int threshold, int rows, int cols, int row, int col, boolean[][] visited){\n        int count=0;\n        if(check(threshold, rows, cols, row, col, visited)){\n            return 1 + movingCountCore(threshold, rows, cols, row+1, col, visited)\n                + movingCountCore(threshold, rows, cols, row-1, col, visited)\n                + movingCountCore(threshold, rows, cols, row, col+1, visited)\n                + movingCountCore(threshold, rows, cols, row, col-1, visited);\n        }\n        return count;\n    }\n    \n    private boolean check(int threshold, int rows, int cols, int row, int col, boolean[][] visited){\n        if(row<0 || col<0 || row==rows || col==cols) return false;\n        if(visited[row][col]) return false;\n        if(getDigitSum(row) +getDigitSum(col) <= threshold){\n            visited[row][col]=true;\n            return true;\n        } \n        return false;\n    }\n    \n    private int getDigitSum(int i){\n        int res=0;\n        while(i>0){\n            res+=i%10;\n            i/=10;\n        }\n        return res;\n    }\n    \n    \n}\n"})})]})}function u(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(a,{...n})}):a(n)}},8453:(n,e,i)=>{i.d(e,{R:()=>s,x:()=>c});var t=i(6540);const o={},r=t.createContext(o);function s(n){const e=t.useContext(r);return t.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(o):n.components||o:s(n.components),t.createElement(r.Provider,{value:e},n.children)}}}]);