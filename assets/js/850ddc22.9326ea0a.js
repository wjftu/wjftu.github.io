"use strict";(self.webpackChunkwjftu_ds=self.webpackChunkwjftu_ds||[]).push([[7881],{8453:(e,r,n)=>{n.d(r,{R:()=>o,x:()=>s});var t=n(6540);const a={},i=t.createContext(a);function o(e){const r=t.useContext(i);return t.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function s(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),t.createElement(i.Provider,{value:r},e.children)}},9883:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>l,contentTitle:()=>s,default:()=>h,frontMatter:()=>o,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"algorithmPractice/leetcode/1128","title":"1288 Remove Covered Intervals","description":"Leetcode","source":"@site/note/algorithmPractice/leetcode/1128.md","sourceDirName":"algorithmPractice/leetcode","slug":"/algorithmPractice/leetcode/1128","permalink":"/note/algorithmPractice/leetcode/1128","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1288,"frontMatter":{"sidebar_position":1288},"sidebar":"tutorialSidebar","previous":{"title":"1249 Minimum Remove to Make Valid Parentheses","permalink":"/note/algorithmPractice/leetcode/1249"},"next":{"title":"1305 All Elements in Two Binary Search Trees","permalink":"/note/algorithmPractice/leetcode/1305"}}');var a=n(4848),i=n(8453);const o={sidebar_position:1288},s="1288 Remove Covered Intervals",l={},c=[];function d(e){const r={a:"a",br:"br",code:"code",h1:"h1",header:"header",hr:"hr",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(r.header,{children:(0,a.jsx)(r.h1,{id:"1288-remove-covered-intervals",children:"1288 Remove Covered Intervals"})}),"\n",(0,a.jsx)(r.p,{children:(0,a.jsx)(r.a,{href:"https://leetcode.com/problems/remove-covered-intervals/",children:"Leetcode"})}),"\n",(0,a.jsx)(r.p,{children:"Given an array intervals where intervals[i] = [li, ri] represent the interval [li, ri), remove all intervals that are covered by another interval in the list."}),"\n",(0,a.jsxs)(r.p,{children:["The interval [a, b) is covered by the interval [c, d) if and only if ",(0,a.jsx)(r.code,{children:"c <= a"})," and ",(0,a.jsx)(r.code,{children:"b <= d"}),"."]}),"\n",(0,a.jsx)(r.p,{children:"Return the number of remaining intervals."}),"\n",(0,a.jsx)(r.p,{children:"Example 1:"}),"\n",(0,a.jsxs)(r.p,{children:["Input: intervals = [[1,4],[3,6],[2,8]]",(0,a.jsx)(r.br,{}),"\n","Output: 2",(0,a.jsx)(r.br,{}),"\n","Explanation: Interval [3,6] is covered by [2,8], therefore it is removed."]}),"\n",(0,a.jsx)(r.p,{children:"Example 2:"}),"\n",(0,a.jsxs)(r.p,{children:["Input: intervals = [[1,4],[2,3]]",(0,a.jsx)(r.br,{}),"\n","Output: 1"]}),"\n",(0,a.jsx)(r.hr,{}),"\n",(0,a.jsx)(r.p,{children:"\u5148\u8fdb\u884c\u6392\u5e8f\uff0c\u5de6\u8fb9\u754c\u5c0f\u7684\u6392\u524d\u9762\u3002\u5de6\u8fb9\u754c\u76f8\u540c\u7684\u60c5\u51b5\u4e0b\uff0c\u53f3\u8fb9\u754c\u5927\u7684\u6392\u524d\u9762\u3002\u4f9d\u6b21\u904d\u5386\uff0c\u5b9a\u4e49\u53d8\u91cf max \u4e3a\u5f53\u524d\u6700\u53f3\u8fb9\u754c\uff0c\u5982\u679c\u67d0\u4e2a\u533a\u95f4\u53f3\u8fb9\u754c\u5c0f\u4e8e max \uff0c\u5219\u8fd9\u4e2a\u533a\u95f4\u662f\u8981\u53bb\u6389\u7684\uff0c\u56e0\u4e3a\u5df2\u7ecf\u6309\u7167\u5de6\u8fb9\u754c\u6392\u5e8f\u4e86\u3002\u5982\u679c\u5b83\u6ca1\u88ab\u53bb\u6389\uff0c\u8bf4\u660e\u5b83\u7684\u53f3\u8fb9\u754c\u5927\u4e8e\u5f53\u524d\u7684\uff0c\u66f4\u65b0 max \u3002\u5bf9\u53bb\u6389\u7684\u8fdb\u884c\u8ba1\u6570\u3002"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-java",children:"public int removeCoveredIntervals(int[][] intervals) {\n    Arrays.sort(intervals, (arr1, arr2)->{\n        if(arr1[0]==arr2[0]){\n            return arr2[1]-arr1[1];\n        } else {\n            return arr1[0]-arr2[0];\n        }\n    });\n    int max=0;\n    int count=0;\n    for(int[] arr:intervals){\n        if(arr[1]<=max) count++;\n        else max=arr[1];\n    }\n    return intervals.length-count;\n}\n"})})]})}function h(e={}){const{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,a.jsx)(r,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}}}]);