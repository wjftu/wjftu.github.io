"use strict";(self.webpackChunkwjftu_ds=self.webpackChunkwjftu_ds||[]).push([[4292],{5661:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>a,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"algorithmPractice/leetcode/228","title":"228 Summary Ranges","description":"LeetCode","source":"@site/note/algorithmPractice/leetcode/228.md","sourceDirName":"algorithmPractice/leetcode","slug":"/algorithmPractice/leetcode/228","permalink":"/note/algorithmPractice/leetcode/228","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":228,"frontMatter":{"sidebar_position":228},"sidebar":"tutorialSidebar","previous":{"title":"226 Invert Binary Tree","permalink":"/note/algorithmPractice/leetcode/226"},"next":{"title":"232 Implement Queue using Stacks","permalink":"/note/algorithmPractice/leetcode/232"}}');var s=t(4848),i=t(8453);const a={sidebar_position:228},o="228 Summary Ranges",l={},c=[];function u(e){const n={a:"a",br:"br",code:"code",h1:"h1",header:"header",hr:"hr",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"228-summary-ranges",children:"228 Summary Ranges"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://leetcode.com/problems/summary-ranges/",children:"LeetCode"})}),"\n",(0,s.jsx)(n.p,{children:"You are given a sorted unique integer array nums."}),"\n",(0,s.jsx)(n.p,{children:"Return the smallest sorted list of ranges that cover all the numbers in the array exactly. That is, each element of nums is covered by exactly one of the ranges, and there is no integer x such that x is in one of the ranges but not in nums."}),"\n",(0,s.jsx)(n.p,{children:"Each range [a,b] in the list should be output as:"}),"\n",(0,s.jsx)(n.p,{children:'"a->b" if a != b\n"a" if a == b'}),"\n",(0,s.jsx)(n.p,{children:"Example 1:"}),"\n",(0,s.jsxs)(n.p,{children:["Input: nums = [0,1,2,4,5,7]",(0,s.jsx)(n.br,{}),"\n",'Output: ["0->2","4->5","7"]',(0,s.jsx)(n.br,{}),"\n","Explanation: The ranges are:",(0,s.jsx)(n.br,{}),"\n",'[0,2] --\x3e "0->2"',(0,s.jsx)(n.br,{}),"\n",'[4,5] --\x3e "4->5"',(0,s.jsx)(n.br,{}),"\n",'[7,7] --\x3e "7"']}),"\n",(0,s.jsx)(n.p,{children:"Example 2:"}),"\n",(0,s.jsxs)(n.p,{children:["Input: nums = [0,2,3,4,6,8,9]",(0,s.jsx)(n.br,{}),"\n",'Output: ["0","2->4","6","8->9"]',(0,s.jsx)(n.br,{}),"\n","Explanation: The ranges are:",(0,s.jsx)(n.br,{}),"\n",'[0,0] --\x3e "0"',(0,s.jsx)(n.br,{}),"\n",'[2,4] --\x3e "2->4"',(0,s.jsx)(n.br,{}),"\n",'[6,6] --\x3e "6"',(0,s.jsx)(n.br,{}),"\n",'[8,9] --\x3e "8->9"']}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.p,{children:"\u7528 begin \u548c end \u4e24\u4e2a\u6574\u6570\u6807\u6ce8\u4e0b\u4e00\u4e2a\u533a\u95f4\u7684\u8d77\u59cb\u548c\u7ed3\u675f"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'class Solution {\n    public List<String> summaryRanges(int[] nums) {\n        \n        List<String> list = new ArrayList<>();\n        if(nums==null || nums.length==0) return list;\n        int begin=nums[0], end=0;\n        for(int i=1;i<nums.length;++i){\n            if(nums[i]!=nums[i-1]+1){\n                end=nums[i-1];\n                addRange(list, begin, end);\n                begin = nums[i];\n            } \n        }\n        addRange(list, begin, nums[nums.length-1]);\n        return list;\n    }\n    \n    private void addRange(List<String> list,int begin, int end){\n        if(begin==end) list.add(String.valueOf(begin));\n        else list.add(begin+"->"+end);\n    }\n}\n'})})]})}function d(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>o});var r=t(6540);const s={},i=r.createContext(s);function a(e){const n=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);