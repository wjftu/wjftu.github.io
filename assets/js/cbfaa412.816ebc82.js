"use strict";(self.webpackChunkwjftu_ds=self.webpackChunkwjftu_ds||[]).push([[2709],{3094:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>m,frontMatter:()=>a,metadata:()=>s,toc:()=>u});const s=JSON.parse('{"id":"algorithmPractice/leetcode/594","title":"594 Longest Harmonious Subsequence","description":"Leetcode 594 Longest Harmonious Subsequence","source":"@site/note/algorithmPractice/leetcode/594.md","sourceDirName":"algorithmPractice/leetcode","slug":"/algorithmPractice/leetcode/594","permalink":"/note/algorithmPractice/leetcode/594","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":594,"frontMatter":{"sidebar_position":594},"sidebar":"tutorialSidebar","previous":{"title":"567 Permutation in String","permalink":"/note/algorithmPractice/leetcode/567"},"next":{"title":"617 Merge Two Binary Trees","permalink":"/note/algorithmPractice/leetcode/617"}}');var r=t(4848),i=t(8453);const a={sidebar_position:594},o="594 Longest Harmonious Subsequence",c={},u=[];function l(e){const n={a:"a",br:"br",code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"594-longest-harmonious-subsequence",children:"594 Longest Harmonious Subsequence"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/longest-harmonious-subsequence/",children:"Leetcode 594 Longest Harmonious Subsequence"})}),"\n",(0,r.jsx)(n.p,{children:"We define a harmonious array as an array where the difference between its maximum value and its minimum value is exactly 1."}),"\n",(0,r.jsx)(n.p,{children:"Given an integer array nums, return the length of its longest harmonious subsequence among all its possible subsequences."}),"\n",(0,r.jsx)(n.p,{children:"A subsequence of array is a sequence that can be derived from the array by deleting some or no elements without changing the order of the remaining elements."}),"\n",(0,r.jsx)(n.p,{children:"Example 1:"}),"\n",(0,r.jsxs)(n.p,{children:["Input: nums = [1,3,2,2,5,2,3,7]",(0,r.jsx)(n.br,{}),"\n","Output: 5"]}),"\n",(0,r.jsx)(n.p,{children:"Explanation: The longest harmonious subsequence is [3,2,2,2,3]."}),"\n",(0,r.jsx)(n.p,{children:"Example 2:"}),"\n",(0,r.jsxs)(n.p,{children:["Input: nums = [1,2,3,4]",(0,r.jsx)(n.br,{}),"\n","Output: 2"]}),"\n",(0,r.jsx)(n.p,{children:"Example 3:"}),"\n",(0,r.jsxs)(n.p,{children:["Input: nums = [1,1,1,1]",(0,r.jsx)(n.br,{}),"\n","Output: 0"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"public int findLHS(int[] nums) {\n    HashMap<Integer,Integer> map=new HashMap<>();\n    for(int i:nums){\n        map.put(i,map.getOrDefault(i,0)+1);\n    }\n    int max=0;\n    for(int i:map.keySet()){\n        if(map.containsKey(i+1)){\n            max=Math.max(max,map.get(i)+map.get(i+1));\n        }\n    }\n    return max;\n}\n"})})]})}function m(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>o});var s=t(6540);const r={},i=s.createContext(r);function a(e){const n=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);