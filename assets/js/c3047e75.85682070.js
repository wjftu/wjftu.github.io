"use strict";(self.webpackChunkwjftu_ds=self.webpackChunkwjftu_ds||[]).push([[1989],{1064:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>s,contentTitle:()=>c,default:()=>g,frontMatter:()=>o,metadata:()=>a,toc:()=>l});const a=JSON.parse('{"id":"springboot/spring-boot-from-scratch","title":"\u4ece\u96f6\u5f00\u59cb\u5199\u4e00\u4e2a Spring","description":"\u53c2\u8003 https://github.com/iuv/square","source":"@site/note/springboot/spring-boot-from-scratch.md","sourceDirName":"springboot","slug":"/springboot/spring-boot-from-scratch","permalink":"/note/springboot/spring-boot-from-scratch","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"title":"\u4ece\u96f6\u5f00\u59cb\u5199\u4e00\u4e2a Spring","sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"HelloWorld","permalink":"/note/springboot/helloworld"},"next":{"title":"LogBack","permalink":"/note/springboot/logback"}}');var r=t(4848),i=t(8453);const o={title:"\u4ece\u96f6\u5f00\u59cb\u5199\u4e00\u4e2a Spring",sidebar_position:3},c="\u4ece\u96f6\u5f00\u59cb\u5199\u4e00\u4e2a Spring",s={},l=[{value:"\u5d4c\u5165\u5f0f web \u5bb9\u5668",id:"\u5d4c\u5165\u5f0f-web-\u5bb9\u5668",level:3},{value:"\u8bfb\u53d6\u914d\u7f6e",id:"\u8bfb\u53d6\u914d\u7f6e",level:3},{value:"\u63a7\u5236\u53cd\u8f6c",id:"\u63a7\u5236\u53cd\u8f6c",level:3}];function p(n){const e={a:"a",code:"code",h1:"h1",h3:"h3",header:"header",p:"p",pre:"pre",...(0,i.R)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.header,{children:(0,r.jsx)(e.h1,{id:"\u4ece\u96f6\u5f00\u59cb\u5199\u4e00\u4e2a-spring",children:"\u4ece\u96f6\u5f00\u59cb\u5199\u4e00\u4e2a Spring"})}),"\n",(0,r.jsxs)(e.p,{children:["\u53c2\u8003 ",(0,r.jsx)(e.a,{href:"https://github.com/iuv/square",children:"https://github.com/iuv/square"})]}),"\n",(0,r.jsx)(e.h3,{id:"\u5d4c\u5165\u5f0f-web-\u5bb9\u5668",children:"\u5d4c\u5165\u5f0f web \u5bb9\u5668"}),"\n",(0,r.jsx)(e.p,{children:"\u9996\u5148\u9700\u8981\u5355\u72ec jar \u5305\u542f\u52a8\uff0c\u800c\u4e0d\u662f\u6253\u6210 war \u5305\u653e\u5230 web \u5bb9\u5668\u91cc\u3002"}),"\n",(0,r.jsx)(e.p,{children:"\u5f15\u5165\u4f9d\u8d56\uff0c\u5d4c\u5165\u5f0f tomcat \uff0c\u4ee5\u53ca logback \u65e5\u5fd7\u3002\u7248\u672c\u91c7\u7528 spring boot 2.7.17 \u76f8\u5e94\u7684\u7248\u672c\u3002"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-xml",children:"<properties>\n    <maven.compiler.source>17</maven.compiler.source>\n    <maven.compiler.target>17</maven.compiler.target>\n    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n\n    <logback.version>1.2.12</logback.version>\n    <tomcat.version>9.0.82</tomcat.version>\n    <snakeyaml.version>1.30</snakeyaml.version>\n</properties>\n\n<dependencies>\n    <dependency>\n        <groupId>ch.qos.logback</groupId>\n        <artifactId>logback-classic</artifactId>\n        <version>${logback.version}</version>\n    </dependency>\n\n    <dependency>\n        <groupId>org.apache.tomcat.embed</groupId>\n        <artifactId>tomcat-embed-core</artifactId>\n        <version>${tomcat.version}</version>\n    </dependency>\n    <dependency>\n        <groupId>org.apache.tomcat</groupId>\n        <artifactId>tomcat-util</artifactId>\n        <version>${tomcat.version}</version>\n    </dependency>\n    <dependency>\n        <groupId>org.apache.tomcat.embed</groupId>\n        <artifactId>tomcat-embed-jasper</artifactId>\n        <version>${tomcat.version}</version>\n    </dependency>\n\n</dependencies>\n"})}),"\n",(0,r.jsx)(e.p,{children:"\u542f\u52a8\u5d4c\u5165\u5f0f tomcat"}),"\n",(0,r.jsx)(e.p,{children:"\u8fd9\u91cc\u4f7f\u7528 target \u6587\u4ef6\u5939\u4f5c\u4e3a projectPath \uff0c web \u76ee\u5f55\u4e3a projectPath/classes/public \uff08\u5728 resources \u6587\u4ef6\u5939\u4e0b\u5efa public \u6587\u4ef6\u5939\uff0c\u653e\u9759\u6001\u8d44\u6e90\uff09"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-java",children:'import org.apache.catalina.startup.Tomcat;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\npublic class MySpringApp {\n    private static final Logger log = LoggerFactory.getLogger(MySpringApp.class);\n    private static Tomcat tomcat = null;\n    private static String CONTEXT_PATH = "/";\n    private static String ENCODING = "UTF-8";\n    private static int TOMCAT_PORT = 8080;\n    public static void run(Class clazz, String[] args) {\n\n        try {\n            String projectPath = clazz.getResource("").getPath();\n            //projectPath \u4e3a\u9879\u76ee\u4e0b\u7684 target \u6587\u4ef6\u5939\n            projectPath = projectPath.substring(0, projectPath.indexOf("classes"));\n            long startTime = System.currentTimeMillis();\n            tomcat = new Tomcat();\n            // \u8bbe\u7f6eTomcat\u7684\u5de5\u4f5c\u76ee\u5f55:\u5de5\u7a0b\u6839\u76ee\u5f55/Tomcat\n            tomcat.setBaseDir(projectPath + "/Tomcat");\n            tomcat.setPort(TOMCAT_PORT);\n            //web \u76ee\u5f55\n            tomcat.addWebapp(CONTEXT_PATH, projectPath + "/classes/public");\n            // \u6267\u884c\u8fd9\u53e5\u624d\u80fd\u652f\u6301JDNI\u67e5\u627e\n            tomcat.enableNaming();\n            tomcat.getConnector().setURIEncoding(ENCODING);\n            tomcat.start();\n            log.info("Tomcat started on port(s): {} with context path \'{}\'", TOMCAT_PORT, CONTEXT_PATH);\n            log.info("Started Application in {} ms." , (System.currentTimeMillis() - startTime));\n            // \u4fdd\u6301\u670d\u52a1\u5668\u8fdb\u7a0b\n            tomcat.getServer().await();\n        } catch (Exception e) {\n            log.error("Application startup failed...", e);\n        }\n    }\n}\n'})}),"\n",(0,r.jsx)(e.p,{children:"\u542f\u52a8\u53ef\u4ee5\u770b\u5230\u65e5\u5fd7"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{children:"21:07:35.112 [main] INFO com.wjftu.MySpringApp - Tomcat started on port(s): 8080 with context path '/'\n21:07:35.131 [main] INFO com.wjftu.MySpringApp - Started Application in 25196 ms.\n"})}),"\n",(0,r.jsx)(e.p,{children:"\u6d4f\u89c8\u5668\u8bbf\u95ee localhost:8080 \u53ef\u4ee5\u770b\u5230 404 \u9875\u9762\uff0c\u5982\u679c\u653e\u6587\u4ef6\u5728 web \u76ee\u5f55\u4e0b\uff0c\u53ef\u4ee5\u8bbf\u95ee\u5230"}),"\n",(0,r.jsx)(e.h3,{id:"\u8bfb\u53d6\u914d\u7f6e",children:"\u8bfb\u53d6\u914d\u7f6e"}),"\n",(0,r.jsx)(e.p,{children:"\u63a5\u4e0b\u6765\u5f15\u5165\u914d\u7f6e\u6587\u4ef6\uff0c\u4ee5 YAML \u914d\u7f6e\u6587\u4ef6 application.yml \u4e3a\u4f8b\u3002 Spring Boot \u4f7f\u7528 snakeyaml \u89e3\u6790 yaml \uff0c\u5f15\u5165 snakeyaml \u4f9d\u8d56"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-xml",children:"<dependency>\n    <groupId>org.yaml</groupId>\n    <artifactId>snakeyaml</artifactId>\n    <version>${snakeyaml.version}</version>\n</dependency>\n\n"})}),"\n",(0,r.jsx)(e.p,{children:"\u5199\u4e00\u4e2a\u89e3\u6790 yaml \u7684\u5de5\u5177\u7c7b\uff0c convert \u65b9\u6cd5\u9012\u5f52\u5c06\u89e3\u6790\u7684 map \u6241\u5e73\u5316"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-java",children:'public class LoadApplicationYmlUtil {\n\n    private static final Logger log = LoggerFactory.getLogger(LoadApplicationYmlUtil.class);\n    public static Map<String, Object> load(String projectPath){\n        var retMap = new HashMap<String, Object>();\n        var yaml = new Yaml();\n        try(FileInputStream fis = new FileInputStream(projectPath+"/classes/application.yml")) {\n            Map<String, Object> yamlMap = (Map<String, Object>)yaml.load(fis);\n            if(yamlMap != null && yamlMap.size()>0){\n                for(Map.Entry e : yamlMap.entrySet()) {\n                    convert("", retMap, yamlMap);\n                }\n            }\n        } catch (FileNotFoundException e) {\n            log.warn("application.yml not exits");\n        } catch (IOException e) {\n            log.error("oad application.yml file error.", e);\n        }\n\n        return retMap;\n    }\n\n    public static void convert(String prefix, Map<String, Object> retMap, Map<String, Object> yamlMap) {\n        if(!"".equals(prefix)) {\n            prefix += ".";\n        }\n        for(Map.Entry<String, Object> e : yamlMap.entrySet()) {\n            String key = prefix + e.getKey();\n            if(e.getValue() instanceof Map) {\n                convert(key, retMap, (Map<String, Object>)e.getValue());\n            } else {\n                retMap.put(key, e.getValue());\n            }\n        }\n    }\n}\n\n'})}),"\n",(0,r.jsx)(e.p,{children:"\u542f\u52a8\u7c7b\u589e\u52a0\u89e3\u6790 application.yml \u529f\u80fd"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-java",children:'public class MySpringApp {\n    private static final Logger log = LoggerFactory.getLogger(MySpringApp.class);\n    private static Tomcat tomcat = null;\n    private static String CONTEXT_PATH = "/";\n    private static String ENCODING = "UTF-8";\n    private static int TOMCAT_PORT = 8080;\n\n    private static Map<String, Object> CONF_MAP = null;\n    public static void run(Class clazz, String[] args) {\n\n        try {\n            String projectPath = clazz.getResource("").getPath();\n            //projectPath \u4e3a\u9879\u76ee\u4e0b\u7684 target \u6587\u4ef6\u5939\n            projectPath = projectPath.substring(0, projectPath.indexOf("classes"));\n            loadYaml(projectPath);\n            long startTime = System.currentTimeMillis();\n            tomcat = new Tomcat();\n            // \u8bbe\u7f6eTomcat\u7684\u5de5\u4f5c\u76ee\u5f55:\u5de5\u7a0b\u6839\u76ee\u5f55/Tomcat\n            tomcat.setBaseDir(projectPath + "/Tomcat");\n            tomcat.setPort(TOMCAT_PORT);\n            //web \u76ee\u5f55\n            tomcat.addWebapp(CONTEXT_PATH, projectPath + "/classes/public");\n            // \u6267\u884c\u8fd9\u53e5\u624d\u80fd\u652f\u6301JDNI\u67e5\u627e\n            tomcat.enableNaming();\n            tomcat.getConnector().setURIEncoding(ENCODING);\n            tomcat.start();\n            log.info("Tomcat started on port(s): {} with context path \'{}\'", TOMCAT_PORT, CONTEXT_PATH);\n            log.info("Started Application in {} ms." , (System.currentTimeMillis() - startTime));\n            // \u4fdd\u6301\u670d\u52a1\u5668\u8fdb\u7a0b\n            tomcat.getServer().await();\n        } catch (Exception e) {\n            log.error("Application startup failed...", e);\n        }\n    }\n\n    private static void loadYaml(String projectPath){\n        CONF_MAP =  LoadApplicationYmlUtil.load(projectPath);\n        if(CONF_MAP.get("server.port") != null){\n            TOMCAT_PORT = (Integer)CONF_MAP.get("server.port");\n        }\n        if(CONF_MAP.get("server.servlet.context-path") != null){\n            CONTEXT_PATH = (String)CONF_MAP.get("server.servlet.context-path");\n        }\n    }\n}\n\n'})}),"\n",(0,r.jsx)(e.p,{children:"\u7f16\u5199\u914d\u7f6e\u6587\u4ef6"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-yml",children:"server:\n  port: 8081\n  servlet:\n    context-path: /abc\n\n"})}),"\n",(0,r.jsxs)(e.p,{children:["\u518d\u6b21\u542f\u52a8\uff0c\u53ef\u4ee5\u53d1\u73b0\u914d\u7f6e\u751f\u6548\uff0c\u89e3\u6790\u51fa\u6765\u7684 map \u4e3a\uff1a",(0,r.jsx)(e.code,{children:"{server.servlet.context-path=/abc, server.port=8081}"})]}),"\n",(0,r.jsx)(e.h3,{id:"\u63a7\u5236\u53cd\u8f6c",children:"\u63a7\u5236\u53cd\u8f6c"}),"\n",(0,r.jsxs)(e.p,{children:["\u6a21\u4eff ",(0,r.jsx)(e.code,{children:"@Component"})," \u521b\u5efa\u4e00\u4e2a\u6ce8\u89e3\uff0c\u7528\u6765\u5b9a\u4e49 bean"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-java",children:'@Target(ElementType.TYPE)\n@Retention(RetentionPolicy.RUNTIME)\npublic @interface MyComponent {\n    String value() default "";\n}\n'})}),"\n",(0,r.jsx)(e.p,{children:"\u5b9a\u4e49\u4e00\u4e2a BeanObject \u7c7b\u578b\uff0c\u8868\u793a bean \u5bf9\u8c61\u3002\u7531\u4e8e\u540c\u4e00\u7c7b\u578b\u53ef\u80fd\u6709\u591a\u4e2a bean \uff0c\u6240\u4ee5\u6709 next \u6307\u9488\u6307\u5411\u4e0b\u4e00\u4e2a"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-java",children:"public class BeanObject {\n\n    /**\n     * \u7c7b\u5168\u540d\uff08\u5305\u542b\u8def\u5f84\uff09\n     */\n    String className;\n\n    /**\n     * \u7c7b\u540d\n     */\n    String simpleName;\n\n    /**\n     * \u5b9e\u9645\u5bf9\u8c61\n     */\n    Object object;\n\n    /**\n     * \u5305\u8def\u5f84\n     */\n    String packages;\n\n    /**\n     * \u6ce8\u89e3\u96c6\u5408\n     */\n    Annotation[] annotations;\n\n    /**\n     * \u63a5\u53e3\u540d\n     */\n    Class[] interfaces;\n\n    /**\n     * \u4e0b\u4e00\u4e2abean\n     */\n    BeanObject next;\n}\n"})}),"\n",(0,r.jsx)(e.p,{children:"\u5199\u4e00\u4e2a\u5de5\u5177\u7c7b\uff0c\u7528\u4e8e\u4ece\u542f\u52a8\u7c7b\u6240\u5728\u7684\u8def\u5f84\u548c\u5b50\u8def\u5f84\u626b\u63cf bean \uff0c\u5b58\u653e\u5728\u4e00\u4e2a map \u4e2d\u3002\u7528\u540d\u79f0\u3001\u7c7b\u578b\u3001\u63a5\u53e3\u4f5c\u4e3a\u952e\u3002"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-java",children:'public class BeansInitUtil {\n\n    private static final Logger log = LoggerFactory.getLogger(BeansInitUtil.class);\n\n    public static Map<String, BeanObject> init(Class clazz) {\n        Map<String, BeanObject> beanMap = new HashMap<>();\n        String path = clazz.getResource("").getPath();\n        log.info("bean init path {}", path);\n        File root = new File(path);\n        initBeans(root, beanMap);\n        return beanMap;\n    }\n\n    private static void initBeans(File file, Map<String, BeanObject> beanMap) {\n        if(file.isDirectory()) {\n            File[] files = file.listFiles();\n            for(File f : files) {\n                initBeans(f, beanMap);\n            }\n        } else {\n            loadClass(file, beanMap);\n        }\n    }\n\n    private static void loadClass(File file, Map<String, BeanObject> beanMap) {\n        if(file == null || !file.getName().endsWith(".class")) {\n            return;\n        }\n        try {\n            BeanObject beanObject = new BeanObject();\n            String path = file.getPath();\n            path = path.substring(path.indexOf("classes") + 8);\n            path = path.replace(".class", "");\n            path = path.replace("/", ".");\n            path = path.replace("\\\\", ".");\n            Class clazz = Class.forName(path);\n            Annotation[] annotations = clazz.getAnnotations();\n            if(filterAnnotations(annotations)) {\n                beanObject.setAnnotations(annotations);\n                beanObject.setObject( clazz.getDeclaredConstructor().newInstance());\n                beanObject.setClassName(clazz.getName());\n                beanObject.setSimpleName(clazz.getSimpleName());\n                beanObject.setPackages(clazz.getPackage().getName());\n                beanObject.setInterfaces(clazz.getInterfaces());\n                //\u6309\u63a5\u53e3\u8bbe\u7f6ebean\n                for(Class interfaceClass : beanObject.getInterfaces()) {\n                    String key = interfaceClass.getName();\n                    BeanObject existBean = beanMap.get(key);\n                    beanObject.setNext(existBean);\n                    beanMap.put(key, beanObject);\n                }\n                //\u6309\u7c7b\u578b\u8bbe\u7f6ebean\n                beanMap.put(clazz.getName(), beanObject);\n                //\u6309\u7167bean\u540d\u79f0\u914d\u7f6ebean\n                for (Annotation annotation: beanObject.getAnnotations()) {\n                    if(annotation instanceof MyComponent) {\n                        MyComponent myComponent = (MyComponent) annotation;\n                        beanMap.put(myComponent.value(), beanObject);\n                    }\n                }\n            }\n        } catch (Exception e) {\n            log.error("init bean error:{}", file.getPath(), e);\n        }\n    }\n\n    private static boolean filterAnnotations(Annotation[] annotations) {\n        for(Annotation annotation : annotations) {\n            if(annotation instanceof MyComponent) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\n'})}),"\n",(0,r.jsx)(e.p,{children:"\u5b9a\u4e49\u4e00\u4e2a\u63a5\u53e3\u548c\u4e24\u4e2a\u5b9e\u73b0\u7c7b"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-java",children:'public interface Person {\n\n    void sayHello();\n}\n\n@MyComponent("boy")\npublic class Boy implements Person{\n    @Override\n    public void sayHello(){\n        System.out.println("hello from boy");\n    }\n}\n\n@MyComponent("girl")\npublic class Girl implements Person {\n    @Override\n    public void sayHello() {\n        System.out.println("hello from girl");\n    }\n}\n'})}),"\n",(0,r.jsx)(e.p,{children:"\u542f\u52a8\u7684\u65f6\u5019\u8bfb\u53d6\u548c\u521b\u5efa bean"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-java",children:'Map<String, BeanObject> beanMap = BeansInitUtil.init(clazz);\nlog.info("beanMap: {}", beanMap);\n'})}),"\n",(0,r.jsx)(e.p,{children:"\u8f93\u51fa\uff1a"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-java",children:"bean init path /Users/mac/wjf/temp/square/target/classes/com/wjftu/\nbeanMap: {com.wjftu.Boy=com.wjftu.BeanObject@58651fd0, \ncom.wjftu.Girl=com.wjftu.BeanObject@4520ebad, \ngirl=com.wjftu.BeanObject@4520ebad, c\nom.wjftu.Person=com.wjftu.BeanObject@58651fd0, \nboy=com.wjftu.BeanObject@58651fd0}\n"})})]})}function g(n={}){const{wrapper:e}={...(0,i.R)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(p,{...n})}):p(n)}},8453:(n,e,t)=>{t.d(e,{R:()=>o,x:()=>c});var a=t(6540);const r={},i=a.createContext(r);function o(n){const e=a.useContext(i);return a.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:o(n.components),a.createElement(i.Provider,{value:e},n.children)}}}]);