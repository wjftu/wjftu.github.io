"use strict";(self.webpackChunkwjftu_ds=self.webpackChunkwjftu_ds||[]).push([[5034],{8046:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"algorithmPractice/codingInterviews/37","title":"37 \u5e8f\u5217\u5316\u4e8c\u53c9\u6811","description":"\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u4e8c\u53c9\u6811\uff0c\u4e0d\u6b62\u4e00\u79cd\u5e8f\u5217\u5316\u65b9\u6cd5\u3002","source":"@site/note/algorithmPractice/codingInterviews/37.md","sourceDirName":"algorithmPractice/codingInterviews","slug":"/algorithmPractice/codingInterviews/37","permalink":"/note/algorithmPractice/codingInterviews/37","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":37,"frontMatter":{"sidebar_position":37},"sidebar":"tutorialSidebar","previous":{"title":"36 \u4e8c\u53c9\u641c\u7d22\u6811\u4e0e\u53cc\u5411\u94fe\u8868","permalink":"/note/algorithmPractice/codingInterviews/36"},"next":{"title":"38 \u5b57\u7b26\u4e32\u7684\u6392\u5217","permalink":"/note/algorithmPractice/codingInterviews/38"}}');var i=r(4848),s=r(8453);const o={sidebar_position:37},a="37 \u5e8f\u5217\u5316\u4e8c\u53c9\u6811",l={},d=[];function c(e){const n={a:"a",code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"37-\u5e8f\u5217\u5316\u4e8c\u53c9\u6811",children:"37 \u5e8f\u5217\u5316\u4e8c\u53c9\u6811"})}),"\n",(0,i.jsx)(n.p,{children:"\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u4e8c\u53c9\u6811\uff0c\u4e0d\u6b62\u4e00\u79cd\u5e8f\u5217\u5316\u65b9\u6cd5\u3002"}),"\n",(0,i.jsx)(n.p,{children:"\u524d\u5e8f\u904d\u5386\u5e8f\u5217\u5316\uff1a"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'public class SerializeTree {\n \n    String Serialize(TreeNode root) {\n        StringBuilder sb=new StringBuilder();\n        serialize(root,sb);\n        return sb.toString();\n    }\n\n    private void serialize(TreeNode root, StringBuilder sb){\n        if(root==null){\n            sb.append("#,");\n            return;\n        } else {\n            sb.append(root.val).append(",");\n        }\n        serialize(root.left, sb);\n        serialize(root.right, sb);\n    }\n\n    int len;\n    TreeNode Deserialize(String str) {\n        String[] ss=str.split(",");\n        len=ss.length;\n        return deserialize(ss, -1);\n    }\n    TreeNode deserialize(String[] ss, int index){\n        index++;\n        if(index==len) return null;\n        if("#".equals(ss[index])) return null;\n        TreeNode root=new TreeNode(Integer.parseInt(ss[index]));\n        root.left=deserialize(ss,index);\n        root.right=deserialize(ss,index);\n        return root;\n\n    }\n\n    private static class TreeNode{\n        int val;\n        TreeNode left;\n        TreeNode right;\n        public TreeNode(int val){\n            this.val=val;\n        }\n    }\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"\u725b\u5ba2\u9650\u5236\u53ea\u80fd\u7528\u5c42\u5e8f\u904d\u5386\u3002\u3002\u3002"}),"\n",(0,i.jsx)(n.p,{children:"\u9700\u8981\u7528\u4e00\u4e2a\u961f\u5217\u8f85\u52a9\uff0c\u5b58\u653e\u4e0b\u4e00\u4e2a\u8282\u70b9\u3002"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://www.nowcoder.com/practice/cf7e25aa97c04cc1a68c8f040e71fb84",children:"\u725b\u5ba2"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'public class Solution {\n    String Serialize(TreeNode root) {\n        if(root==null) return "#";\n        Queue<TreeNode> queue=new LinkedList<>();\n        queue.add(root);\n        StringBuilder sb=new StringBuilder();\n        sb.append(root.val).append(",");\n        while(!queue.isEmpty()){\n            TreeNode t=queue.poll();\n\n            if(t.left==null){\n                sb.append("#,");\n            } else {\n                queue.add(t.left);\n                sb.append(t.left.val).append(",");\n            }\n            if(t.right==null){\n                sb.append("#,");\n            } else {\n                queue.add(t.right);\n                sb.append(t.right.val).append(",");\n            }\n        }\n        int end=sb.length()-1;\n        while(true){\n            char c=sb.charAt(end);\n            if(c!=\',\' && c!=\'#\') break;\n            end--;\n        }\n        return sb.substring(0,end+1);\n    }\n\n    TreeNode Deserialize(String str) {\n        if("#".equals(str)) return null;\n        String[] ss=str.split(",");\n        Queue<TreeNode> queue=new LinkedList<>();\n        TreeNode root=new TreeNode(Integer.parseInt(ss[0]));\n        queue.add(root);\n        int index=1, len=ss.length;\n        while(!queue.isEmpty()){\n            if(index>=len) break;\n            TreeNode t=queue.poll();\n            if("#".equals(ss[index])){\n                index++;\n            } else {\n                t.left=new TreeNode(Integer.parseInt(ss[index++]));\n                TreeNode a=t.left;\n                queue.add(t.left);\n            }\n            if(index>=len) break;\n            if("#".equals(ss[index])){\n                index++;\n            } else {\n                t.right=new TreeNode(Integer.parseInt(ss[index++]));\n                TreeNode a=t.right;\n                queue.add(t.right);\n            }\n\n        }\n        return root;\n    }\n}\n'})})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>a});var t=r(6540);const i={},s=t.createContext(i);function o(e){const n=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);