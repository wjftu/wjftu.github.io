"use strict";(self.webpackChunkwjftu_ds=self.webpackChunkwjftu_ds||[]).push([[2717],{2734:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>a,contentTitle:()=>s,default:()=>p,frontMatter:()=>c,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"algorithmPractice/leetcode/226","title":"226 Invert Binary Tree","description":"LeetCode","source":"@site/note/algorithmPractice/leetcode/226.md","sourceDirName":"algorithmPractice/leetcode","slug":"/algorithmPractice/leetcode/226","permalink":"/note/algorithmPractice/leetcode/226","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":226,"frontMatter":{"sidebar_position":226},"sidebar":"tutorialSidebar","previous":{"title":"217 Contains Duplicate","permalink":"/note/algorithmPractice/leetcode/217"},"next":{"title":"228 Summary Ranges","permalink":"/note/algorithmPractice/leetcode/228"}}');var o=r(4848),i=r(8453);const c={sidebar_position:226},s="226 Invert Binary Tree",a={},l=[];function d(e){const t={a:"a",code:"code",h1:"h1",header:"header",hr:"hr",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"226-invert-binary-tree",children:"226 Invert Binary Tree"})}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.a,{href:"https://leetcode.com/problems/invert-binary-tree/",children:"LeetCode"})}),"\n",(0,o.jsx)(t.p,{children:"Given the root of a binary tree, invert the tree, and return its root."}),"\n",(0,o.jsx)(t.p,{children:"Example 1:"}),"\n",(0,o.jsx)(t.p,{children:"Input: root = [4,2,7,1,3,6,9]\r\nOutput: [4,7,2,9,6,3,1]"}),"\n",(0,o.jsx)(t.p,{children:"Example 2:"}),"\n",(0,o.jsx)(t.p,{children:"Input: root = [2,1,3]\r\nOutput: [2,3,1]"}),"\n",(0,o.jsx)(t.p,{children:"Example 3:"}),"\n",(0,o.jsx)(t.p,{children:"Input: root = []\r\nOutput: []"}),"\n",(0,o.jsx)(t.p,{children:"Constraints:"}),"\n",(0,o.jsxs)(t.p,{children:["The number of nodes in the tree is in the range [0, 100].\r\n",(0,o.jsx)(t.code,{children:"-100 <= Node.val <= 100"})]}),"\n",(0,o.jsx)(t.hr,{}),"\n",(0,o.jsx)(t.p,{children:"\u5148\u628a\u8be5\u8282\u70b9\u7684\u5de6\u53f3\u5b50\u6811\u4ea4\u6362\uff0c\u518d\u5206\u522b\u5bf9\u5de6\u53f3\u5b50\u6811\u64cd\u4f5c"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-java",children:"class Solution {\r\n    public TreeNode invertTree(TreeNode root) {\r\n        if(root==null) return null;\r\n        TreeNode t=root.left;\r\n        root.left=root.right;\r\n        root.right=t;\r\n        invertTree(root.left);\r\n        invertTree(root.right);\r\n        return root;\r\n    }\r\n}\n"})})]})}function p(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,t,r)=>{r.d(t,{R:()=>c,x:()=>s});var n=r(6540);const o={},i=n.createContext(o);function c(e){const t=n.useContext(i);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:c(e.components),n.createElement(i.Provider,{value:t},e.children)}}}]);