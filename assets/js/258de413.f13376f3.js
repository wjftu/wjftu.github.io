"use strict";(self.webpackChunkwjftu_ds=self.webpackChunkwjftu_ds||[]).push([[1719],{5604:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"algorithmPractice/leetcode/525","title":"525 Contiguous Array","description":"Leetcode","source":"@site/note/algorithmPractice/leetcode/525.md","sourceDirName":"algorithmPractice/leetcode","slug":"/algorithmPractice/leetcode/525","permalink":"/note/algorithmPractice/leetcode/525","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":525,"frontMatter":{"sidebar_position":525},"sidebar":"tutorialSidebar","previous":{"title":"520 Detect Capital","permalink":"/note/algorithmPractice/leetcode/520"},"next":{"title":"532 K-diff Pairs in an Array","permalink":"/note/algorithmPractice/leetcode/532"}}');var a=t(4848),s=t(8453);const i={sidebar_position:525},o="525 Contiguous Array",u={},c=[];function l(e){const n={a:"a",br:"br",code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"525-contiguous-array",children:"525 Contiguous Array"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.a,{href:"https://leetcode.com/problems/contiguous-array/",children:"Leetcode"})}),"\n",(0,a.jsx)(n.p,{children:"Given a binary array nums, return the maximum length of a contiguous subarray with an equal number of 0 and 1."}),"\n",(0,a.jsx)(n.p,{children:"Example 1:"}),"\n",(0,a.jsxs)(n.p,{children:["Input: nums = [0,1]",(0,a.jsx)(n.br,{}),"\n","Output: 2",(0,a.jsx)(n.br,{}),"\n","Explanation: [0, 1] is the longest contiguous subarray with an equal number of 0 and 1."]}),"\n",(0,a.jsx)(n.p,{children:"Example 2:"}),"\n",(0,a.jsxs)(n.p,{children:["Input: nums = [0,1,0]",(0,a.jsx)(n.br,{}),"\n","Output: 2",(0,a.jsx)(n.br,{}),"\n","Explanation: [0, 1] (or [1, 0]) is a longest contiguous subarray with equal number of 0 and 1."]}),"\n",(0,a.jsx)(n.p,{children:"\u904d\u5386\u6570\u7ec4\uff0c\u8ba1\u7b97\u4e00\u4e2a sum \uff0c\u9047\u5230 1 \u65f6 sum+1 \uff0c\u9047\u5230 0 \u65f6 sum-1 \uff0c\u6bcf\u6b21\u628a sum \u7684\u503c\u548c\u4e0b\u6807\u50a8\u5b58\u5230 map \u91cc\uff0c\u5982\u679c\u4e00\u4e2a sum \u5728 map \u91cc\u5b58\u5728\uff0c\u8bf4\u660e\u4e4b\u524d\u5f97\u5230\u8fc7\u8fd9\u4e2a sum \uff0c\u4e24\u6b21\u540c\u4e00\u4e2a sum \u7684\u8fd9\u4e00\u6bb5\u662f\u4e00\u6bb5 0 \u548c 1 \u4e2a\u6570\u76f8\u7b49\u7684\u533a\u95f4\uff0c\u4e0b\u6807\u7684\u5dee\u503c\u662f\u533a\u95f4\u957f\u5ea6\u3002"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:"public int findMaxLength(int[] nums) {\n    HashMap<Integer,Integer> map=new HashMap<Integer,Integer>(){{\n        put(0,-1);\n    }};\n    \n    int sum=0;\n    int max=0;\n    for(int i=0;i<nums.length;++i){\n        if(nums[i]==1){\n            sum++;\n        } else {\n            sum--;\n        }\n        \n        if(map.containsKey(sum)){\n            max=Math.max(max, i-map.get(sum));\n        } else {\n            map.put(sum, i);\n        }\n    }\n    return max;\n}\n"})})]})}function m(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>o});var r=t(6540);const a={},s=r.createContext(a);function i(e){const n=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);