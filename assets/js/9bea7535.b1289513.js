"use strict";(self.webpackChunkwjftu_ds=self.webpackChunkwjftu_ds||[]).push([[7384],{2170:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"algorithmPractice/leetcode/20","title":"20 Valid Parentheses","description":"Leetcode","source":"@site/note/algorithmPractice/leetcode/20.md","sourceDirName":"algorithmPractice/leetcode","slug":"/algorithmPractice/leetcode/20","permalink":"/note/algorithmPractice/leetcode/20","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":20,"frontMatter":{"sidebar_position":20},"sidebar":"tutorialSidebar","previous":{"title":"18 4Sum","permalink":"/note/algorithmPractice/leetcode/18"},"next":{"title":"22 Generate Parentheses","permalink":"/note/algorithmPractice/leetcode/22"}}');var r=t(4848),c=t(8453);const i={sidebar_position:20},a="20 Valid Parentheses",l={},o=[];function p(e){const n={a:"a",br:"br",code:"code",h1:"h1",header:"header",hr:"hr",p:"p",pre:"pre",...(0,c.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"20-valid-parentheses",children:"20 Valid Parentheses"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/valid-parentheses/",children:"Leetcode"})}),"\n",(0,r.jsxs)(n.p,{children:["Given a string s containing just the characters '(', ')', '",", ","', '[' and ']', determine if the input string is valid."]}),"\n",(0,r.jsx)(n.p,{children:"An input string is valid if:"}),"\n",(0,r.jsxs)(n.p,{children:["Open brackets must be closed by the same type of brackets.",(0,r.jsx)(n.br,{}),"\n","Open brackets must be closed in the correct order."]}),"\n",(0,r.jsx)(n.p,{children:"Example 1:"}),"\n",(0,r.jsxs)(n.p,{children:['Input: s = "()"',(0,r.jsx)(n.br,{}),"\n","Output: true"]}),"\n",(0,r.jsx)(n.p,{children:"Example 2:"}),"\n",(0,r.jsxs)(n.p,{children:['Input: s = "()[]','"',(0,r.jsx)(n.br,{}),"\n","Output: true"]}),"\n",(0,r.jsx)(n.p,{children:"Example 3:"}),"\n",(0,r.jsxs)(n.p,{children:['Input: s = "(]"',(0,r.jsx)(n.br,{}),"\n","Output: false"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.p,{children:"\u53ef\u4ee5\u4f7f\u7528\u6808\u6765\u6a21\u62df\u62ec\u53f7"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"public boolean isValid(String s) {\n    Deque<Character> stack = new LinkedList<>();\n    for(int i=0;i<s.length();++i){\n        char c=s.charAt(i);\n        if(c=='(' || c=='{' || c=='['){\n            stack.push(c);\n        } else {\n            if(stack.isEmpty()) return false;\n            char p=stack.peek();\n            if((c==')' && p=='(') ||\n                (c=='}' && p=='{') ||\n                (c==']' && p=='[')){\n                stack.pop();\n            } else {\n                return false;\n            }\n        }\n    }\n    return stack.isEmpty();\n}\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-cpp",children:"bool isValid(string s) {\n    vector<char> stack;\n    int len=s.length();\n    for(int i=0;i<s.length();++i){\n        char c=s[i];\n        if(c=='(' || c=='{' || c=='['){\n            stack.push_back(c);\n        } else {\n            if(stack.empty()) return false;\n            char p = stack[stack.size()-1];\n            if((c==')' && p=='(') ||\n                (c=='}' && p=='{') ||\n                (c==']' && p=='[')){\n                stack.pop_back();\n            } else {\n                return false;\n            }\n        }\n    }\n    return stack.empty();\n}\n"})})]})}function d(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>a});var s=t(6540);const r={},c=s.createContext(r);function i(e){const n=s.useContext(c);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),s.createElement(c.Provider,{value:n},e.children)}}}]);