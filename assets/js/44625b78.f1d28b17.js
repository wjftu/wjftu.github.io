"use strict";(self.webpackChunkwjftu_ds=self.webpackChunkwjftu_ds||[]).push([[8743],{8443:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>s,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"algorithmPractice/leetcode/236","title":"236 Lowest Common Ancestor of a Binary Tree","description":"Leetcode","source":"@site/note/algorithmPractice/leetcode/236.md","sourceDirName":"algorithmPractice/leetcode","slug":"/algorithmPractice/leetcode/236","permalink":"/note/algorithmPractice/leetcode/236","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":236,"frontMatter":{"sidebar_position":236},"sidebar":"tutorialSidebar","previous":{"title":"232 Implement Queue using Stacks","permalink":"/note/algorithmPractice/leetcode/232"},"next":{"title":"240 Search a 2D Matrix II","permalink":"/note/algorithmPractice/leetcode/240"}}');var r=t(4848),i=t(8453);const s={sidebar_position:236},a="236 Lowest Common Ancestor of a Binary Tree",l={},c=[];function d(e){const n={a:"a",br:"br",code:"code",h1:"h1",header:"header",hr:"hr",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"236-lowest-common-ancestor-of-a-binary-tree",children:"236 Lowest Common Ancestor of a Binary Tree"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree/",children:"Leetcode"})}),"\n",(0,r.jsx)(n.p,{children:"Given a binary tree, find the lowest common ancestor (LCA) of two given nodes in the tree."}),"\n",(0,r.jsx)(n.p,{children:"According to the definition of LCA on Wikipedia: \u201cThe lowest common ancestor is defined between two nodes p and q as the lowest node in T that has both p and q as descendants (where we allow a node to be a descendant of itself).\u201d"}),"\n",(0,r.jsx)(n.p,{children:"Example 1:"}),"\n",(0,r.jsxs)(n.p,{children:["Input: root = [3,5,1,6,2,0,8,null,null,7,4], p = 5, q = 1",(0,r.jsx)(n.br,{}),"\n","Output: 3",(0,r.jsx)(n.br,{}),"\n","Explanation: The LCA of nodes 5 and 1 is 3."]}),"\n",(0,r.jsx)(n.p,{children:"Example 2:"}),"\n",(0,r.jsxs)(n.p,{children:["Input: root = [3,5,1,6,2,0,8,null,null,7,4], p = 5, q = 4",(0,r.jsx)(n.br,{}),"\n","Output: 5",(0,r.jsx)(n.br,{}),"\n","Explanation: The LCA of nodes 5 and 4 is 5, since a node can be a descendant of itself according to the LCA definition."]}),"\n",(0,r.jsx)(n.p,{children:"Example 3:"}),"\n",(0,r.jsxs)(n.p,{children:["Input: root = [1,2], p = 1, q = 2",(0,r.jsx)(n.br,{}),"\n","Output: 1"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.p,{children:"\u524d\u5e8f\u904d\u5386\uff0c\u5982\u679c\u9047\u5230\u76ee\u6807\u8282\u70b9\uff0c\u8fd4\u56de true \uff0c\u6700\u5c0f\u516c\u5171\u7956\u5148\u7684\u5de6\u53f3\u4e24\u4e2a\u5b57\u8282\u70b9\u7684\u904d\u5386\u90fd\u4f1a\u8fd4\u56de true \u3002\u8fb9\u754c\u6761\u4ef6\u5176\u4e2d\u4e00\u4e2a\u8282\u70b9\u662f\u516c\u5171\u7956\u5148\uff0c\u9700\u8981\u8003\u8651\u5230\u3002"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode(int x) { val = x; }\n * }\n */\nclass Solution {\n    TreeNode ret;\n    public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {\n        if(root==null || p==null || q==null) return null;\n        ret=null;\n        find(root, p, q);\n        return ret;\n    }\n    \n    private boolean find(TreeNode root, TreeNode p, TreeNode q){\n        if(root==null) return false;\n        if(root==p || root==q) {\n            if(ret==null && (find(root.left, p, q) || find(root.right, p, q))) ret=root;\n            return true;\n        }\n        boolean left=false, right=false;\n        left=find(root.left, p, q);\n        right=find(root.right, p, q);\n        if(left && right) ret=root;\n        return (left || right);\n    }\n}\n"})})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>a});var o=t(6540);const r={},i=o.createContext(r);function s(e){const n=o.useContext(i);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),o.createElement(i.Provider,{value:n},e.children)}}}]);