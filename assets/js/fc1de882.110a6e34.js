"use strict";(self.webpackChunkwjftu_ds=self.webpackChunkwjftu_ds||[]).push([[744],{8279:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>p,frontMatter:()=>s,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"algorithmPractice/leetcode/354","title":"354 Russian Doll Envelopes","description":"Leetcode","source":"@site/note/algorithmPractice/leetcode/354.md","sourceDirName":"algorithmPractice/leetcode","slug":"/algorithmPractice/leetcode/354","permalink":"/note/algorithmPractice/leetcode/354","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":354,"frontMatter":{"sidebar_position":354},"sidebar":"tutorialSidebar","previous":{"title":"343 Integer Break","permalink":"/note/algorithmPractice/leetcode/343"},"next":{"title":"389 Find the Difference","permalink":"/note/algorithmPractice/leetcode/389"}}');var r=t(4848),o=t(8453);const s={sidebar_position:354},l="354 Russian Doll Envelopes",a={},d=[];function c(e){const n={a:"a",br:"br",code:"code",h1:"h1",header:"header",hr:"hr",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"354-russian-doll-envelopes",children:"354 Russian Doll Envelopes"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/russian-doll-envelopes/",children:"Leetcode"})}),"\n",(0,r.jsx)(n.p,{children:"You are given a 2D array of integers envelopes where envelopes[i] = [wi, hi] represents the width and the height of an envelope."}),"\n",(0,r.jsx)(n.p,{children:"One envelope can fit into another if and only if both the width and height of one envelope are greater than the other envelope's width and height."}),"\n",(0,r.jsx)(n.p,{children:"Return the maximum number of envelopes you can Russian doll (i.e., put one inside the other)."}),"\n",(0,r.jsx)(n.p,{children:"Note: You cannot rotate an envelope."}),"\n",(0,r.jsx)(n.p,{children:"Example 1:"}),"\n",(0,r.jsxs)(n.p,{children:["Input: envelopes = [[5,4],[6,4],[6,7],[2,3]]",(0,r.jsx)(n.br,{}),"\n","Output: 3",(0,r.jsx)(n.br,{}),"\n","Explanation: The maximum number of envelopes you can Russian doll is 3 ([2,3] => [5,4] => [6,7])."]}),"\n",(0,r.jsx)(n.p,{children:"Example 2:"}),"\n",(0,r.jsxs)(n.p,{children:["Input: envelopes = [[1,1],[1,1],[1,1]]",(0,r.jsx)(n.br,{}),"\n","Output: 1"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.p,{children:"\u9996\u5148\u5bf9 envelopes \u8fdb\u884c\u6392\u5e8f\uff0c\u6309\u7167 height \u7684\u5347\u5e8f\u6392\u5e8f\uff0c\u5982\u679c height \u76f8\u540c\uff0c\u6309\u7167 width \u7684\u964d\u5e8f\u6392\u5e8f\u3002\u8fd9\u6837\u95ee\u9898\u5c31\u53d8\u6210\u4e86 width \u7684\u6700\u957f\u9012\u589e\u5b50\u5e8f\u5217\uff08Lonest Increasing Sequence\uff09\u95ee\u9898\u3002\u56e0\u4e3a width \u662f\u964d\u5e8f\u6392\u5e8f\u7684\uff0c\u5f53\u4e00\u4e2a\u4fe1\u5c01\u7684 width \u5927\u4e8e \u4e00\u4e2a\u5b83\u5de6\u8fb9\u4fe1\u5c01\u7684 width \uff0c\u540c\u65f6\u5b83\u7684 height \u4e5f\u662f\u5927\u4e8e\u7684\u3002"}),"\n",(0,r.jsx)(n.p,{children:"\u6c42\u89e3\u6700\u957f\u9012\u589e\u5b50\u5e8f\u5217\u5982\u679c\u7528\u4f20\u7edf\u7684\u52a8\u6001\u89c4\u5212\uff0c\u662f\u4f1a\u8d85\u65f6\u7684\u3002"}),"\n",(0,r.jsx)(n.p,{children:"\u5efa\u7acb\u4e00\u4e2a\u6570\u7ec4\u5b58\u653e width \u7684\u6700\u957f\u9012\u589e\u5b50\u5e8f\u5217\uff0c\u6309\u987a\u5e8f\u904d\u5386\u6240\u6709\u4fe1\u5c01\uff0c\u7528\u4e8c\u5206\u67e5\u627e\u627e\u5230\u5f53\u524d\u4fe1\u5c01\u53ef\u4ee5\u63d2\u5165\u6570\u7ec4\u4e2d\u7684\u4f4d\u7f6e\uff0c\u5982\u679c\u63d2\u5165\u7684\u662f\u4e2d\u95f4\uff0c\u66f4\u65b0\u4e2d\u95f4\u8be5\u4f4d\u7f6e\u7684 width \uff0c\u5982\u679c\u63d2\u5165\u7684\u662f\u53f3\u8fb9\uff0c\u5c06\u5176\u653e\u5165\u53f3\u8fb9\u5e76\u628a\u6570\u7ec4\u957f\u5ea6\u52a0\u4e00\u3002\u6700\u540e\u5f97\u5230\u7684\u6570\u7ec4\u5c31\u662f\u6700\u957f\u9012\u589e\u5b50\u5e8f\u5217\uff0c\u4e14\u957f\u5ea6\u5c31\u662f\u7b54\u6848\u3002"}),"\n",(0,r.jsx)(n.p,{children:"\u65f6\u95f4\u590d\u6742\u5ea6 o(nlogn) \uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 o(n)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"    public int maxEnvelopes(int[][] envelopes) {\n        Arrays.sort(envelopes,new Comparator<>(){\n            @Override\n            public int compare(int[] arr1, int[] arr2){\n                if(arr1[0]==arr2[0]){\n                    return arr2[1]-arr1[1];\n                } else {\n                    return arr1[0]-arr2[0];\n                }\n            }\n        });\n        /**\n        o(n^2), Time Limit Exceeded\n        \n        int[] dp=new int[envelopes.length];\n        int max=1;\n        dp[0]=1;\n        for(int i=1;i<envelopes.length;++i){\n\n            dp[i]=1;\n            for(int j=0;j<i;++j){\n                if(dp[j]+1>dp[i] && envelopes[j][1]<envelopes[i][1]){\n                    dp[i]=dp[j]+1;\n                }\n            }\n\n            if(dp[i]>max) max=dp[i];\n        }\n        return max;\n        */\n        int[] lis=new int[envelopes.length];\n        int len=0;\n        for(int i=0;i<envelopes.length;++i){\n            int index=Arrays.binarySearch(lis,0,len,envelopes[i][1]);\n            if(index<0){\n                index=-index-1;\n            }\n            lis[index]=envelopes[i][1];\n            if(index==len){\n                len++;\n            }\n        }\n        return len;\n            \n    }\n"})})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>l});var i=t(6540);const r={},o=i.createContext(r);function s(e){const n=i.useContext(o);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);