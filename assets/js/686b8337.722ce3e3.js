"use strict";(self.webpackChunkwjftu_ds=self.webpackChunkwjftu_ds||[]).push([[5228],{7166:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"kubernetes/cluster","title":"\u96c6\u7fa4\u5b89\u88c5","description":"\u4f7f\u7528 kubeadm \u5b89\u88c5 K8S \u96c6\u7fa4","source":"@site/note/kubernetes/cluster.md","sourceDirName":"kubernetes","slug":"/kubernetes/cluster","permalink":"/note/kubernetes/cluster","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"title":"\u96c6\u7fa4\u5b89\u88c5","sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"\u5feb\u901f\u4e0a\u624b","permalink":"/note/kubernetes/quick-start"},"next":{"title":"Spring Boot","permalink":"/note/springboot/"}}');var r=t(4848),o=t(8453);const i={title:"\u96c6\u7fa4\u5b89\u88c5",sidebar_position:2},c="Kubernetes \u96c6\u7fa4\u5b89\u88c5",d={},l=[];function a(e){const n={a:"a",br:"br",code:"code",h1:"h1",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"kubernetes-\u96c6\u7fa4\u5b89\u88c5",children:"Kubernetes \u96c6\u7fa4\u5b89\u88c5"})}),"\n",(0,r.jsx)(n.p,{children:"\u4f7f\u7528 kubeadm \u5b89\u88c5 K8S \u96c6\u7fa4"}),"\n",(0,r.jsx)(n.p,{children:"\u786c\u4ef6\u8981\u6c42\uff1a"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"\u6bcf\u53f0\u673a\u5668 2 CPUs"}),"\n",(0,r.jsx)(n.li,{children:"\u6bcf\u53f0\u673a\u5668\u81f3\u5c11 2 GB \u5185\u5b58\uff0c\u5efa\u8bae 4 GB \u4ee5\u4e0a"}),"\n",(0,r.jsx)(n.li,{children:"\u81f3\u5c11 20 GB \u78c1\u76d8\u7a7a\u95f4"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["\u6d4b\u8bd5\u73af\u5883\uff1a",(0,r.jsx)(n.br,{}),"\n","3 \u53f0 Oracle Cloud Arm server , 1C 6G, Ubuntu 24"]}),"\n",(0,r.jsx)(n.p,{children:"\u7ed9 3 \u53f0\u670d\u52a1\u5668\u8bbe\u7f6e\u597d\u8ba1\u7b97\u673a\u540d"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"sudo hostnamectl set-hostname master\nsudo hostnamectl set-hostname worker1\nsudo hostnamectl set-hostname worker2\n"})}),"\n",(0,r.jsx)(n.p,{children:"\u8bbe\u7f6e hosts"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"#/etc/hosts\n10.0.31.43 master\n10.0.230.102 worker1\n10.0.8.117 worker2\n"})}),"\n",(0,r.jsx)(n.p,{children:"\u8bbe\u7f6e OverlayFS \u6587\u4ef6\u7cfb\u7edf\u9a71\u52a8\uff0c\u548c\u4fa8\u754c\u7f51\u7edc\u6570\u636e\u5305\u8fc7\u6ee4"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"sudo apt install kmod\n\nsudo modprobe overlay\nsudo modprobe br_netfilter\n\n# Add these lines to a new sysctl config file\nsudo tee /etc/sysctl.d/kubernetes.conf <<EOF\nnet.bridge.bridge-nf-call-ip6tables = 1\nnet.bridge.bridge-nf-call-iptables = 1\nnet.ipv4.ip_forward = 1\nEOF\n\n# Apply sysctl parameters without reboot\nsudo sysctl --system\n"})}),"\n",(0,r.jsx)(n.p,{children:"\u5b89\u88c5\u5bb9\u5668\u8fd0\u884c\u65f6\uff0c\u8fd9\u91cc\u4f7f\u7528 containerd \uff0c\u5982\u679c\u5b89\u88c5 docker \u4e5f\u662f\u53ef\u4ee5\u7684"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"# Install dependencies\nsudo apt install -y curl gnupg2 software-properties-common apt-transport-https ca-certificates\n\n# Install containerd\nsudo apt install -y containerd\n\n# Create default config\nsudo mkdir -p /etc/containerd\ncontainerd config default | sudo tee /etc/containerd/config.toml\n\n# Set SystemdCgroup = true\nsudo sed -i 's/SystemdCgroup = false/SystemdCgroup = true/' /etc/containerd/config.toml\n\n# Restart containerd\nsudo systemctl restart containerd\nsudo systemctl enable containerd\n\n"})}),"\n",(0,r.jsx)(n.p,{children:"\u5b89\u88c5 kubeadm kubelet kubectl"}),"\n",(0,r.jsxs)(n.p,{children:["\u53c2\u8003\u5b98\u65b9\u6587\u6863\uff1a",(0,r.jsx)(n.a,{href:"https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/",children:"https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"sudo apt-get update\n# apt-transport-https may be a dummy package; if so, you can skip that package\nsudo apt-get install -y apt-transport-https ca-certificates curl gpg\n\n# If the directory `/etc/apt/keyrings` does not exist, it should be created before the curl command, read the note below.\n# sudo mkdir -p -m 755 /etc/apt/keyrings\ncurl -fsSL https://pkgs.k8s.io/core:/stable:/v1.33/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg\n\n# This overwrites any existing configuration in /etc/apt/sources.list.d/kubernetes.list\necho 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.33/deb/ /' | sudo tee /etc/apt/sources.list.d/kubernetes.list\n\nsudo apt-get update\nsudo apt-get install -y kubelet kubeadm kubectl\nsudo apt-mark hold kubelet kubeadm kubectl\n\nsudo systemctl enable --now kubelet\n"})}),"\n",(0,r.jsx)(n.p,{children:"\u521d\u59cb\u5316\u63a7\u5236\u5e73\u53f0\uff08 master \u8282\u70b9 \uff09"}),"\n",(0,r.jsxs)(n.p,{children:["\u52a0\u4e0a ",(0,r.jsx)(n.code,{children:"--ignore-preflight-errors=NumCPU"})," \u53c2\u6570\u8df3\u8fc7 cpu \u6838\u6570\u6821\u9a8c\uff0c\u56e0\u4e3a cpu \u4e0d\u591f"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"sudo kubeadm init --pod-network-cidr=10.244.0.0/16 --ignore-preflight-errors=NumCPU\n"})}),"\n",(0,r.jsx)(n.p,{children:"\u6210\u529f\u540e\u4f1a\u8f93\u51fa\u5982\u4e0b\uff1a"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'Your Kubernetes control-plane has initialized successfully!\n\nTo start using your cluster, you need to run the following as a regular user:\n\n  mkdir -p $HOME/.kube\n  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config\n  sudo chown $(id -u):$(id -g) $HOME/.kube/config\n\nAlternatively, if you are the root user, you can run:\n\n  export KUBECONFIG=/etc/kubernetes/admin.conf\n\nYou should now deploy a pod network to the cluster.\nRun "kubectl apply -f [podnetwork].yaml" with one of the options listed at:\n  https://kubernetes.io/docs/concepts/cluster-administration/addons/\n\nThen you can join any number of worker nodes by running the following on each as root:\n\nkubeadm join 10.0.31.43:6443 --token i5bqan.wqi8eibmn3o2lzm1 \\\n        --discovery-token-ca-cert-hash sha256:fa7ca7f8f791aff55e9f05049009c37628d09384150f3a3eb4dfa6a998481c59 --ignore-preflight-errors=NumCPU\n'})}),"\n",(0,r.jsx)(n.p,{children:"\u4e5f\u53ef\u4ee5\u624b\u52a8\u751f\u6210 join \u7684\u547d\u4ee4"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"$ sudo kubeadm token create --print-join-command\n"})}),"\n",(0,r.jsx)(n.p,{children:"\u6309\u7167\u4e0a\u9762\u7684\u8f93\u51fa\u4e3a\u5f53\u524d\u7528\u6237\u914d\u7f6e kubectl \uff0c\u5141\u8bb8\u7ba1\u7406\u96c6\u7fa4"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"mkdir -p $HOME/.kube\nsudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config\nsudo chown $(id -u):$(id -g) $HOME/.kube/config\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"kubectl apply -f https://raw.githubusercontent.com/flannel-io/flannel/master/Documentation/kube-flannel.yml\n"})}),"\n",(0,r.jsx)(n.p,{children:"\u67e5\u770b\u96c6\u7fa4\u72b6\u6001"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"$ kubectl get nodes\nNAME     STATUS     ROLES           AGE   VERSION\nmaster   NotReady   control-plane   17m   v1.33.1\n"})}),"\n",(0,r.jsx)(n.p,{children:"\u67e5\u770b kube-system \u540d\u79f0\u7a7a\u95f4\u7684 pod"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"$ kubectl get pods -n kube-system\nNAME                             READY   STATUS    RESTARTS   AGE\ncoredns-674b8bbfcf-4zjnn         1/1     Running   0          84m\ncoredns-674b8bbfcf-q77d2         1/1     Running   0          84m\netcd-master                      1/1     Running   1          85m\nkube-apiserver-master            1/1     Running   1          85m\nkube-controller-manager-master   1/1     Running   1          85m\nkube-proxy-4zf5s                 1/1     Running   0          27m\nkube-proxy-9bfpz                 1/1     Running   0          84m\nkube-proxy-h4fwg                 1/1     Running   0          36m\nkube-scheduler-master            1/1     Running   1          85m\n"})}),"\n",(0,r.jsx)(n.p,{children:"\u4e24\u53f0 worker \u52a0\u5165\u96c6\u7fa4"}),"\n",(0,r.jsx)(n.p,{children:"\uff08\u9700\u8981\u5f00\u9632\u706b\u5899\uff09"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'$ sudo kubeadm join 10.0.31.43:6443 --token i5bqan.wqi8eibmn3o2lzm1         --discovery-token-ca-cert-hash sha256:fa7ca7f8f791aff55e9f05049009c37628d09384150f3a3eb4dfa6a998481c59 \n[preflight] Running pre-flight checks\n[preflight] Reading configuration from the "kubeadm-config" ConfigMap in namespace "kube-system"...\n[preflight] Use \'kubeadm init phase upload-config --config your-config-file\' to re-upload it.\n[kubelet-start] Writing kubelet configuration to file "/var/lib/kubelet/config.yaml"\n[kubelet-start] Writing kubelet environment file with flags to file "/var/lib/kubelet/kubeadm-flags.env"\n[kubelet-start] Starting the kubelet\n[kubelet-check] Waiting for a healthy kubelet at http://127.0.0.1:10248/healthz. This can take up to 4m0s\n[kubelet-check] The kubelet is healthy after 1.004267028s\n[kubelet-start] Waiting for the kubelet to perform the TLS Bootstrap\n\nThis node has joined the cluster:\n* Certificate signing request was sent to apiserver and a response was received.\n* The Kubelet was informed of the new secure connection details.\n\nRun \'kubectl get nodes\' on the control-plane to see this node join the cluster.\n'})}),"\n",(0,r.jsx)(n.p,{children:"\u5728 master \u4e0a\u67e5\u770b\u96c6\u7fa4\u72b6\u6001"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"$ kubectl get nodes\nNAME      STATUS     ROLES           AGE     VERSION\nmaster    Ready      control-plane   57m     v1.33.1\nworker1   Ready      <none>          8m47s   v1.33.1\nworker2   NotReady   <none>          7s      v1.33.1\n"})}),"\n",(0,r.jsx)(n.p,{children:"\u90e8\u7f72\u4e00\u4e2a nginx \u6d4b\u8bd5"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"$ kubectl create deployment nginx --image=nginx\ndeployment.apps/nginx created\n$ kubectl get pods\nNAME                     READY   STATUS    RESTARTS   AGE\nnginx-5869d7778c-pv9kd   1/1     Running   0          8s\n$ kubectl expose deployment nginx --port=80 --type=NodePort\nservice/nginx exposed\n$ kubectl get svc\nNAME         TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)        AGE\nkubernetes   ClusterIP   10.96.0.1       <none>        443/TCP        132m\nnginx        NodePort    10.103.86.214   <none>        80:31401/TCP   6s\n"})}),"\n",(0,r.jsxs)(n.p,{children:["\u8bbf\u95ee ",(0,r.jsx)(n.a,{href:"http://worker2:31401",children:"http://worker2:31401"})," \u5373\u53ef\u6253\u5f00\u9ed8\u8ba4\u9875\u9762"]}),"\n",(0,r.jsx)(n.p,{children:"clean up"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"kubectl delete svc nginx\nkubectl delete deployment nginx\n"})}),"\n",(0,r.jsx)(n.p,{children:"\u542f\u52a8\u548c\u505c\u6b62\u96c6\u7fa4\u53ef\u4ee5\u7528 systemctl \u542f\u52a8\u548c\u505c\u6b62 kubelet \u548c containerd \uff0c\u5148\u505c\u6b62 worker node \u518d\u505c\u6b62 master node \uff0c\u5148\u542f\u52a8 master node \u518d\u542f\u52a8 worker node"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"sudo systemctl stop kubelet\nsudo systemctl stop containerd\n"})})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>c});var s=t(6540);const r={},o=s.createContext(r);function i(e){const n=s.useContext(o);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);