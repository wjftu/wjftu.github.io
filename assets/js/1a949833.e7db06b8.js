"use strict";(self.webpackChunkwjftu_ds=self.webpackChunkwjftu_ds||[]).push([[3243],{6264:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>s,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"algorithmPractice/leetcode/10","title":"10 Regular Expression Matching","description":"Leetcode","source":"@site/note/algorithmPractice/leetcode/10.md","sourceDirName":"algorithmPractice/leetcode","slug":"/algorithmPractice/leetcode/10","permalink":"/note/algorithmPractice/leetcode/10","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":10,"frontMatter":{"sidebar_position":10},"sidebar":"tutorialSidebar","previous":{"title":"7 Reverse Integer","permalink":"/note/algorithmPractice/leetcode/7"},"next":{"title":"11 Container With Most Water","permalink":"/note/algorithmPractice/leetcode/11"}}');var i=t(4848),a=t(8453);const s={sidebar_position:10},o="10 Regular Expression Matching",c={},l=[];function p(e){const n={a:"a",br:"br",code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"10-regular-expression-matching",children:"10 Regular Expression Matching"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://leetcode.com/problems/regular-expression-matching/",children:"Leetcode"})}),"\n",(0,i.jsx)(n.p,{children:"Given an input string s and a pattern p, implement regular expression matching with support for '.' and '*' where:"}),"\n",(0,i.jsxs)(n.p,{children:["'.' Matches any single character.\u200b\u200b\u200b\u200b",(0,i.jsx)(n.br,{}),"\n","'*' Matches zero or more of the preceding element.",(0,i.jsx)(n.br,{}),"\n","The matching should cover the entire input string (not partial)."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'Example 1:\n\nInput: s = "aa", p = "a"  \nOutput: false  \nExplanation: "a" does not match the entire string "aa".  \n\nExample 2:\n\nInput: s = "aa", p = "a*"  \nOutput: true  \nExplanation: \'*\' means zero or more of the preceding element, \'a\'. Therefore, by repeating \'a\' once, it becomes "aa".  \n\nExample 3:\n\nInput: s = "ab", p = ".*"  \nOutput: true  \nExplanation: ".*" means "zero or more (*) of any character (.)".  \n'})}),"\n",(0,i.jsx)(n.p,{children:"\u5982\u679c\u5f53\u524d\u5143\u7d20\u5339\u914d\u4e14\u4e0b\u4e00\u4e2a\u5143\u7d20\u662f\u661f\u53f7\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u5339\u914d 1 \u4e2a\uff0c\u5339\u914d 0 \u4e2a\uff0c\u5339\u914d\u591a\u4e2a"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"class Solution {\n    public boolean isMatch(String s, String p) {\n        if(s==null || p==null) return false;\n        return isMatch(s, p, 0, 0);\n    }\n\n    private boolean isMatch(String s, String p, int i1, int i2){\n        if(i1==s.length() && i2==p.length()) return true;\n        if(i2>=p.length() || i1>s.length()) return false;\n\n        if(i2+1<p.length() && p.charAt(i2+1)=='*'){\n            if(p.charAt(i2)=='.' || \n               (i1<s.length() && s.charAt(i1)==p.charAt(i2))){\n                return isMatch(s, p, i1+1, i2+2) ||\n                        isMatch(s, p, i1, i2+2) ||\n                        isMatch(s, p, i1+1, i2);\n            } else {\n                return isMatch(s, p, i1, i2+2);\n            }\n        }\n\n        if(i1<s.length() && s.charAt(i1)==p.charAt(i2) || p.charAt(i2)=='.'){\n            return isMatch(s, p, i1+1, i2+1);\n        }\n\n        return false;\n    }\n\n}\n"})})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>o});var r=t(6540);const i={},a=r.createContext(i);function s(e){const n=r.useContext(a);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);